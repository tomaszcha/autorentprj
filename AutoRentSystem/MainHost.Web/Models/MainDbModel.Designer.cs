//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_Application_DepartmentPickUp", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.Department), "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.Application), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_Application_DepartmentRet", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.Department), "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.Application), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_Application_Model", "Model", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.Model), "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.Application), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_Auto_Insuarance", "Insuarance", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.Insuarance), "Auto", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.Auto), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_Auto_Model", "Model", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.Model), "Auto", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.Auto), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_ChargeOffOrder_Auto", "Auto", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.Auto), "ChargeOffOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.ChargeOffOrder), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_ExtraDamage_Auto", "Auto", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.Auto), "ExtraDamage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.ExtraDamage), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_Order_Auto", "Auto", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MainHost.Web.Models.Auto), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.Order), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_OrdinaryDamage_Auto", "Auto", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.Auto), "OrdinaryDamage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.OrdinaryDamage), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_PurchaseOrder_Auto", "Auto", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.Auto), "PurchaseOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.PurchaseOrder), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_Repair_Auto", "Auto", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.Auto), "Repair", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.Repair), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_ChargeOffOrder_EmployeeManager", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MainHost.Web.Models.Employee), "ChargeOffOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.ChargeOffOrder), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_ChargeOffOrder_EmployeeMechanic", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.Employee), "ChargeOffOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.ChargeOffOrder), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_Department_City", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.City), "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.Department), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_Employee_City", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.City), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.Employee), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_EvacuationOrder_City", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.City), "EvacuationOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.EvacuationOrder), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_InsuaranceAgency_City", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.City), "InsuaranceAgency", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.InsuaranceAgency), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_Purchaser_City", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.City), "Purchaser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.Purchaser), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_Supplier_City", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.City), "Supplier", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.Supplier), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_TechnicalService_City", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.City), "TechnicalService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.TechnicalService), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_Order_Customer", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.Customer), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.Order), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_OrdinaryDamage_Damage", "Damage", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.Damage), "OrdinaryDamage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.OrdinaryDamage), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_Employee_Department", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.Department), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.Employee), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_Order_DepartmentPickup", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MainHost.Web.Models.Department), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.Order), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_Order_DepartmentRetrn", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MainHost.Web.Models.Department), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.Order), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_EvacuationOrder_Order", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.Order), "EvacuationOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.EvacuationOrder), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_Insuarance_InsuaranceAgency", "InsuaranceAgency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.InsuaranceAgency), "Insuarance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.Insuarance), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_Model_Make", "Make", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.Make), "Model", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.Model), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_SupplyOrder_Model", "Model", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.Model), "SupplyOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.SupplyOrder), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_PurchaseOrder_Purchaser", "Purchaser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.Purchaser), "PurchaseOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.PurchaseOrder), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_Repair_TechnicalService", "TechnicalService", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.TechnicalService), "Repair", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.Repair), true)]
[assembly: EdmRelationshipAttribute("AutoRentModel", "FK_SupplyOrder_Supplier", "Supplier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainHost.Web.Models.Supplier), "SupplyOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainHost.Web.Models.SupplyOrder), true)]

#endregion

namespace MainHost.Web.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AutoRentEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AutoRentEntities object using the connection string found in the 'AutoRentEntities' section of the application configuration file.
        /// </summary>
        public AutoRentEntities() : base("name=AutoRentEntities", "AutoRentEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AutoRentEntities object.
        /// </summary>
        public AutoRentEntities(string connectionString) : base(connectionString, "AutoRentEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AutoRentEntities object.
        /// </summary>
        public AutoRentEntities(EntityConnection connection) : base(connection, "AutoRentEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Application> Application
        {
            get
            {
                if ((_Application == null))
                {
                    _Application = base.CreateObjectSet<Application>("Application");
                }
                return _Application;
            }
        }
        private ObjectSet<Application> _Application;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Auto> Auto
        {
            get
            {
                if ((_Auto == null))
                {
                    _Auto = base.CreateObjectSet<Auto>("Auto");
                }
                return _Auto;
            }
        }
        private ObjectSet<Auto> _Auto;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChargeOffOrder> ChargeOffOrder
        {
            get
            {
                if ((_ChargeOffOrder == null))
                {
                    _ChargeOffOrder = base.CreateObjectSet<ChargeOffOrder>("ChargeOffOrder");
                }
                return _ChargeOffOrder;
            }
        }
        private ObjectSet<ChargeOffOrder> _ChargeOffOrder;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<City> City
        {
            get
            {
                if ((_City == null))
                {
                    _City = base.CreateObjectSet<City>("City");
                }
                return _City;
            }
        }
        private ObjectSet<City> _City;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customer> Customer
        {
            get
            {
                if ((_Customer == null))
                {
                    _Customer = base.CreateObjectSet<Customer>("Customer");
                }
                return _Customer;
            }
        }
        private ObjectSet<Customer> _Customer;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Damage> Damage
        {
            get
            {
                if ((_Damage == null))
                {
                    _Damage = base.CreateObjectSet<Damage>("Damage");
                }
                return _Damage;
            }
        }
        private ObjectSet<Damage> _Damage;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Department> Department
        {
            get
            {
                if ((_Department == null))
                {
                    _Department = base.CreateObjectSet<Department>("Department");
                }
                return _Department;
            }
        }
        private ObjectSet<Department> _Department;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employee
        {
            get
            {
                if ((_Employee == null))
                {
                    _Employee = base.CreateObjectSet<Employee>("Employee");
                }
                return _Employee;
            }
        }
        private ObjectSet<Employee> _Employee;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EvacuationOrder> EvacuationOrder
        {
            get
            {
                if ((_EvacuationOrder == null))
                {
                    _EvacuationOrder = base.CreateObjectSet<EvacuationOrder>("EvacuationOrder");
                }
                return _EvacuationOrder;
            }
        }
        private ObjectSet<EvacuationOrder> _EvacuationOrder;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExtraDamage> ExtraDamage
        {
            get
            {
                if ((_ExtraDamage == null))
                {
                    _ExtraDamage = base.CreateObjectSet<ExtraDamage>("ExtraDamage");
                }
                return _ExtraDamage;
            }
        }
        private ObjectSet<ExtraDamage> _ExtraDamage;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Insuarance> Insuarance
        {
            get
            {
                if ((_Insuarance == null))
                {
                    _Insuarance = base.CreateObjectSet<Insuarance>("Insuarance");
                }
                return _Insuarance;
            }
        }
        private ObjectSet<Insuarance> _Insuarance;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InsuaranceAgency> InsuaranceAgency
        {
            get
            {
                if ((_InsuaranceAgency == null))
                {
                    _InsuaranceAgency = base.CreateObjectSet<InsuaranceAgency>("InsuaranceAgency");
                }
                return _InsuaranceAgency;
            }
        }
        private ObjectSet<InsuaranceAgency> _InsuaranceAgency;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Make> Make
        {
            get
            {
                if ((_Make == null))
                {
                    _Make = base.CreateObjectSet<Make>("Make");
                }
                return _Make;
            }
        }
        private ObjectSet<Make> _Make;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Model> Model
        {
            get
            {
                if ((_Model == null))
                {
                    _Model = base.CreateObjectSet<Model>("Model");
                }
                return _Model;
            }
        }
        private ObjectSet<Model> _Model;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Order> Order
        {
            get
            {
                if ((_Order == null))
                {
                    _Order = base.CreateObjectSet<Order>("Order");
                }
                return _Order;
            }
        }
        private ObjectSet<Order> _Order;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrdinaryDamage> OrdinaryDamage
        {
            get
            {
                if ((_OrdinaryDamage == null))
                {
                    _OrdinaryDamage = base.CreateObjectSet<OrdinaryDamage>("OrdinaryDamage");
                }
                return _OrdinaryDamage;
            }
        }
        private ObjectSet<OrdinaryDamage> _OrdinaryDamage;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PurchaseOrder> PurchaseOrder
        {
            get
            {
                if ((_PurchaseOrder == null))
                {
                    _PurchaseOrder = base.CreateObjectSet<PurchaseOrder>("PurchaseOrder");
                }
                return _PurchaseOrder;
            }
        }
        private ObjectSet<PurchaseOrder> _PurchaseOrder;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Purchaser> Purchaser
        {
            get
            {
                if ((_Purchaser == null))
                {
                    _Purchaser = base.CreateObjectSet<Purchaser>("Purchaser");
                }
                return _Purchaser;
            }
        }
        private ObjectSet<Purchaser> _Purchaser;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Repair> Repair
        {
            get
            {
                if ((_Repair == null))
                {
                    _Repair = base.CreateObjectSet<Repair>("Repair");
                }
                return _Repair;
            }
        }
        private ObjectSet<Repair> _Repair;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Supplier> Supplier
        {
            get
            {
                if ((_Supplier == null))
                {
                    _Supplier = base.CreateObjectSet<Supplier>("Supplier");
                }
                return _Supplier;
            }
        }
        private ObjectSet<Supplier> _Supplier;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SupplyOrder> SupplyOrder
        {
            get
            {
                if ((_SupplyOrder == null))
                {
                    _SupplyOrder = base.CreateObjectSet<SupplyOrder>("SupplyOrder");
                }
                return _SupplyOrder;
            }
        }
        private ObjectSet<SupplyOrder> _SupplyOrder;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TechnicalService> TechnicalService
        {
            get
            {
                if ((_TechnicalService == null))
                {
                    _TechnicalService = base.CreateObjectSet<TechnicalService>("TechnicalService");
                }
                return _TechnicalService;
            }
        }
        private ObjectSet<TechnicalService> _TechnicalService;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Application EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplication(Application application)
        {
            base.AddObject("Application", application);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Auto EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuto(Auto auto)
        {
            base.AddObject("Auto", auto);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChargeOffOrder EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChargeOffOrder(ChargeOffOrder chargeOffOrder)
        {
            base.AddObject("ChargeOffOrder", chargeOffOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the City EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCity(City city)
        {
            base.AddObject("City", city);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Customer EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomer(Customer customer)
        {
            base.AddObject("Customer", customer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Damage EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDamage(Damage damage)
        {
            base.AddObject("Damage", damage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Department EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepartment(Department department)
        {
            base.AddObject("Department", department);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employee EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployee(Employee employee)
        {
            base.AddObject("Employee", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EvacuationOrder EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvacuationOrder(EvacuationOrder evacuationOrder)
        {
            base.AddObject("EvacuationOrder", evacuationOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExtraDamage EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExtraDamage(ExtraDamage extraDamage)
        {
            base.AddObject("ExtraDamage", extraDamage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Insuarance EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInsuarance(Insuarance insuarance)
        {
            base.AddObject("Insuarance", insuarance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InsuaranceAgency EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInsuaranceAgency(InsuaranceAgency insuaranceAgency)
        {
            base.AddObject("InsuaranceAgency", insuaranceAgency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Make EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMake(Make make)
        {
            base.AddObject("Make", make);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Model EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToModel(Model model)
        {
            base.AddObject("Model", model);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Order EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrder(Order order)
        {
            base.AddObject("Order", order);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrdinaryDamage EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrdinaryDamage(OrdinaryDamage ordinaryDamage)
        {
            base.AddObject("OrdinaryDamage", ordinaryDamage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PurchaseOrder EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPurchaseOrder(PurchaseOrder purchaseOrder)
        {
            base.AddObject("PurchaseOrder", purchaseOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Purchaser EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPurchaser(Purchaser purchaser)
        {
            base.AddObject("Purchaser", purchaser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Repair EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRepair(Repair repair)
        {
            base.AddObject("Repair", repair);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Supplier EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSupplier(Supplier supplier)
        {
            base.AddObject("Supplier", supplier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SupplyOrder EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSupplyOrder(SupplyOrder supplyOrder)
        {
            base.AddObject("SupplyOrder", supplyOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TechnicalService EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTechnicalService(TechnicalService technicalService)
        {
            base.AddObject("TechnicalService", technicalService);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoRentModel", Name="Application")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Application : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Application object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        /// <param name="modelId">Initial value of the ModelId property.</param>
        /// <param name="pickupDate">Initial value of the PickupDate property.</param>
        /// <param name="pickupDepartmentId">Initial value of the PickupDepartmentId property.</param>
        /// <param name="returnDate">Initial value of the ReturnDate property.</param>
        /// <param name="returnDepartmentId">Initial value of the ReturnDepartmentId property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Application CreateApplication(global::System.Int32 id, global::System.DateTime creationDate, global::System.String firstName, global::System.String lastName, global::System.String phone, global::System.Int32 modelId, global::System.DateTime pickupDate, global::System.Int32 pickupDepartmentId, global::System.DateTime returnDate, global::System.Int32 returnDepartmentId, global::System.Int16 status)
        {
            Application application = new Application();
            application.Id = id;
            application.CreationDate = creationDate;
            application.FirstName = firstName;
            application.LastName = lastName;
            application.Phone = phone;
            application.ModelId = modelId;
            application.PickupDate = pickupDate;
            application.PickupDepartmentId = pickupDepartmentId;
            application.ReturnDate = returnDate;
            application.ReturnDepartmentId = returnDepartmentId;
            application.Status = status;
            return application;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModelId
        {
            get
            {
                return _ModelId;
            }
            set
            {
                OnModelIdChanging(value);
                ReportPropertyChanging("ModelId");
                _ModelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModelId");
                OnModelIdChanged();
            }
        }
        private global::System.Int32 _ModelId;
        partial void OnModelIdChanging(global::System.Int32 value);
        partial void OnModelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PickupDate
        {
            get
            {
                return _PickupDate;
            }
            set
            {
                OnPickupDateChanging(value);
                ReportPropertyChanging("PickupDate");
                _PickupDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PickupDate");
                OnPickupDateChanged();
            }
        }
        private global::System.DateTime _PickupDate;
        partial void OnPickupDateChanging(global::System.DateTime value);
        partial void OnPickupDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PickupDepartmentId
        {
            get
            {
                return _PickupDepartmentId;
            }
            set
            {
                OnPickupDepartmentIdChanging(value);
                ReportPropertyChanging("PickupDepartmentId");
                _PickupDepartmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PickupDepartmentId");
                OnPickupDepartmentIdChanged();
            }
        }
        private global::System.Int32 _PickupDepartmentId;
        partial void OnPickupDepartmentIdChanging(global::System.Int32 value);
        partial void OnPickupDepartmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReturnDate
        {
            get
            {
                return _ReturnDate;
            }
            set
            {
                OnReturnDateChanging(value);
                ReportPropertyChanging("ReturnDate");
                _ReturnDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReturnDate");
                OnReturnDateChanged();
            }
        }
        private global::System.DateTime _ReturnDate;
        partial void OnReturnDateChanging(global::System.DateTime value);
        partial void OnReturnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReturnDepartmentId
        {
            get
            {
                return _ReturnDepartmentId;
            }
            set
            {
                OnReturnDepartmentIdChanging(value);
                ReportPropertyChanging("ReturnDepartmentId");
                _ReturnDepartmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReturnDepartmentId");
                OnReturnDepartmentIdChanged();
            }
        }
        private global::System.Int32 _ReturnDepartmentId;
        partial void OnReturnDepartmentIdChanging(global::System.Int32 value);
        partial void OnReturnDepartmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int16 _Status;
        partial void OnStatusChanging(global::System.Int16 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Preferences
        {
            get
            {
                return _Preferences;
            }
            set
            {
                OnPreferencesChanging(value);
                ReportPropertyChanging("Preferences");
                _Preferences = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Preferences");
                OnPreferencesChanged();
            }
        }
        private global::System.String _Preferences;
        partial void OnPreferencesChanging(global::System.String value);
        partial void OnPreferencesChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Application_DepartmentPickUp", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("AutoRentModel.FK_Application_DepartmentPickUp", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("AutoRentModel.FK_Application_DepartmentPickUp", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("AutoRentModel.FK_Application_DepartmentPickUp", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("AutoRentModel.FK_Application_DepartmentPickUp", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Application_DepartmentRet", "Department")]
        public Department Department1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("AutoRentModel.FK_Application_DepartmentRet", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("AutoRentModel.FK_Application_DepartmentRet", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> Department1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("AutoRentModel.FK_Application_DepartmentRet", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("AutoRentModel.FK_Application_DepartmentRet", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Application_Model", "Model")]
        public Model Model
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Model>("AutoRentModel.FK_Application_Model", "Model").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Model>("AutoRentModel.FK_Application_Model", "Model").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Model> ModelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Model>("AutoRentModel.FK_Application_Model", "Model");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Model>("AutoRentModel.FK_Application_Model", "Model", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoRentModel", Name="Auto")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Auto : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Auto object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="insuaranceId">Initial value of the InsuaranceId property.</param>
        /// <param name="category">Initial value of the Category property.</param>
        /// <param name="modelId">Initial value of the ModelId property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="mileage">Initial value of the Mileage property.</param>
        /// <param name="color">Initial value of the Color property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Auto CreateAuto(global::System.Int32 id, global::System.String number, global::System.Int32 insuaranceId, global::System.Int16 category, global::System.Int32 modelId, global::System.Int16 year, global::System.Int32 mileage, global::System.Int16 color, global::System.Int16 status)
        {
            Auto auto = new Auto();
            auto.Id = id;
            auto.Number = number;
            auto.InsuaranceId = insuaranceId;
            auto.Category = category;
            auto.ModelId = modelId;
            auto.Year = year;
            auto.Mileage = mileage;
            auto.Color = color;
            auto.Status = status;
            return auto;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InsuaranceId
        {
            get
            {
                return _InsuaranceId;
            }
            set
            {
                OnInsuaranceIdChanging(value);
                ReportPropertyChanging("InsuaranceId");
                _InsuaranceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InsuaranceId");
                OnInsuaranceIdChanged();
            }
        }
        private global::System.Int32 _InsuaranceId;
        partial void OnInsuaranceIdChanging(global::System.Int32 value);
        partial void OnInsuaranceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.Int16 _Category;
        partial void OnCategoryChanging(global::System.Int16 value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModelId
        {
            get
            {
                return _ModelId;
            }
            set
            {
                OnModelIdChanging(value);
                ReportPropertyChanging("ModelId");
                _ModelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModelId");
                OnModelIdChanged();
            }
        }
        private global::System.Int32 _ModelId;
        partial void OnModelIdChanging(global::System.Int32 value);
        partial void OnModelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int16 _Year;
        partial void OnYearChanging(global::System.Int16 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Mileage
        {
            get
            {
                return _Mileage;
            }
            set
            {
                OnMileageChanging(value);
                ReportPropertyChanging("Mileage");
                _Mileage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Mileage");
                OnMileageChanged();
            }
        }
        private global::System.Int32 _Mileage;
        partial void OnMileageChanging(global::System.Int32 value);
        partial void OnMileageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.Int16 _Color;
        partial void OnColorChanging(global::System.Int16 value);
        partial void OnColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastCheckDate
        {
            get
            {
                return _LastCheckDate;
            }
            set
            {
                OnLastCheckDateChanging(value);
                ReportPropertyChanging("LastCheckDate");
                _LastCheckDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastCheckDate");
                OnLastCheckDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastCheckDate;
        partial void OnLastCheckDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastCheckDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int16 _Status;
        partial void OnStatusChanging(global::System.Int16 value);
        partial void OnStatusChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Auto_Insuarance", "Insuarance")]
        public Insuarance Insuarance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Insuarance>("AutoRentModel.FK_Auto_Insuarance", "Insuarance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Insuarance>("AutoRentModel.FK_Auto_Insuarance", "Insuarance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Insuarance> InsuaranceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Insuarance>("AutoRentModel.FK_Auto_Insuarance", "Insuarance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Insuarance>("AutoRentModel.FK_Auto_Insuarance", "Insuarance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Auto_Model", "Model")]
        public Model Model
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Model>("AutoRentModel.FK_Auto_Model", "Model").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Model>("AutoRentModel.FK_Auto_Model", "Model").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Model> ModelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Model>("AutoRentModel.FK_Auto_Model", "Model");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Model>("AutoRentModel.FK_Auto_Model", "Model", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_ChargeOffOrder_Auto", "ChargeOffOrder")]
        public EntityCollection<ChargeOffOrder> ChargeOffOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChargeOffOrder>("AutoRentModel.FK_ChargeOffOrder_Auto", "ChargeOffOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChargeOffOrder>("AutoRentModel.FK_ChargeOffOrder_Auto", "ChargeOffOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_ExtraDamage_Auto", "ExtraDamage")]
        public EntityCollection<ExtraDamage> ExtraDamage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExtraDamage>("AutoRentModel.FK_ExtraDamage_Auto", "ExtraDamage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExtraDamage>("AutoRentModel.FK_ExtraDamage_Auto", "ExtraDamage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Order_Auto", "Order")]
        public EntityCollection<Order> Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("AutoRentModel.FK_Order_Auto", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("AutoRentModel.FK_Order_Auto", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_OrdinaryDamage_Auto", "OrdinaryDamage")]
        public EntityCollection<OrdinaryDamage> OrdinaryDamage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrdinaryDamage>("AutoRentModel.FK_OrdinaryDamage_Auto", "OrdinaryDamage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrdinaryDamage>("AutoRentModel.FK_OrdinaryDamage_Auto", "OrdinaryDamage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_PurchaseOrder_Auto", "PurchaseOrder")]
        public EntityCollection<PurchaseOrder> PurchaseOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseOrder>("AutoRentModel.FK_PurchaseOrder_Auto", "PurchaseOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseOrder>("AutoRentModel.FK_PurchaseOrder_Auto", "PurchaseOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Repair_Auto", "Repair")]
        public EntityCollection<Repair> Repair
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Repair>("AutoRentModel.FK_Repair_Auto", "Repair");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Repair>("AutoRentModel.FK_Repair_Auto", "Repair", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoRentModel", Name="ChargeOffOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChargeOffOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChargeOffOrder object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="autoId">Initial value of the AutoId property.</param>
        /// <param name="reason">Initial value of the Reason property.</param>
        /// <param name="mechanicId">Initial value of the MechanicId property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static ChargeOffOrder CreateChargeOffOrder(global::System.Int32 id, global::System.Int32 autoId, global::System.String reason, global::System.Int32 mechanicId, global::System.Int16 status)
        {
            ChargeOffOrder chargeOffOrder = new ChargeOffOrder();
            chargeOffOrder.Id = id;
            chargeOffOrder.AutoId = autoId;
            chargeOffOrder.Reason = reason;
            chargeOffOrder.MechanicId = mechanicId;
            chargeOffOrder.Status = status;
            return chargeOffOrder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AutoId
        {
            get
            {
                return _AutoId;
            }
            set
            {
                OnAutoIdChanging(value);
                ReportPropertyChanging("AutoId");
                _AutoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoId");
                OnAutoIdChanged();
            }
        }
        private global::System.Int32 _AutoId;
        partial void OnAutoIdChanging(global::System.Int32 value);
        partial void OnAutoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                OnReasonChanging(value);
                ReportPropertyChanging("Reason");
                _Reason = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Reason");
                OnReasonChanged();
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MechanicId
        {
            get
            {
                return _MechanicId;
            }
            set
            {
                OnMechanicIdChanging(value);
                ReportPropertyChanging("MechanicId");
                _MechanicId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MechanicId");
                OnMechanicIdChanged();
            }
        }
        private global::System.Int32 _MechanicId;
        partial void OnMechanicIdChanging(global::System.Int32 value);
        partial void OnMechanicIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ManagerId
        {
            get
            {
                return _ManagerId;
            }
            set
            {
                OnManagerIdChanging(value);
                ReportPropertyChanging("ManagerId");
                _ManagerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManagerId");
                OnManagerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ManagerId;
        partial void OnManagerIdChanging(Nullable<global::System.Int32> value);
        partial void OnManagerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int16 _Status;
        partial void OnStatusChanging(global::System.Int16 value);
        partial void OnStatusChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_ChargeOffOrder_Auto", "Auto")]
        public Auto Auto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auto>("AutoRentModel.FK_ChargeOffOrder_Auto", "Auto").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auto>("AutoRentModel.FK_ChargeOffOrder_Auto", "Auto").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Auto> AutoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auto>("AutoRentModel.FK_ChargeOffOrder_Auto", "Auto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Auto>("AutoRentModel.FK_ChargeOffOrder_Auto", "Auto", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_ChargeOffOrder_EmployeeManager", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("AutoRentModel.FK_ChargeOffOrder_EmployeeManager", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("AutoRentModel.FK_ChargeOffOrder_EmployeeManager", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("AutoRentModel.FK_ChargeOffOrder_EmployeeManager", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("AutoRentModel.FK_ChargeOffOrder_EmployeeManager", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_ChargeOffOrder_EmployeeMechanic", "Employee")]
        public Employee Employee1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("AutoRentModel.FK_ChargeOffOrder_EmployeeMechanic", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("AutoRentModel.FK_ChargeOffOrder_EmployeeMechanic", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> Employee1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("AutoRentModel.FK_ChargeOffOrder_EmployeeMechanic", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("AutoRentModel.FK_ChargeOffOrder_EmployeeMechanic", "Employee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoRentModel", Name="City")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class City : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new City object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static City CreateCity(global::System.Int32 id, global::System.String name)
        {
            City city = new City();
            city.Id = id;
            city.Name = name;
            return city;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Department_City", "Department")]
        public EntityCollection<Department> Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Department>("AutoRentModel.FK_Department_City", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Department>("AutoRentModel.FK_Department_City", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Employee_City", "Employee")]
        public EntityCollection<Employee> Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("AutoRentModel.FK_Employee_City", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("AutoRentModel.FK_Employee_City", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_EvacuationOrder_City", "EvacuationOrder")]
        public EntityCollection<EvacuationOrder> EvacuationOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EvacuationOrder>("AutoRentModel.FK_EvacuationOrder_City", "EvacuationOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EvacuationOrder>("AutoRentModel.FK_EvacuationOrder_City", "EvacuationOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_InsuaranceAgency_City", "InsuaranceAgency")]
        public EntityCollection<InsuaranceAgency> InsuaranceAgency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InsuaranceAgency>("AutoRentModel.FK_InsuaranceAgency_City", "InsuaranceAgency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InsuaranceAgency>("AutoRentModel.FK_InsuaranceAgency_City", "InsuaranceAgency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Purchaser_City", "Purchaser")]
        public EntityCollection<Purchaser> Purchaser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Purchaser>("AutoRentModel.FK_Purchaser_City", "Purchaser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Purchaser>("AutoRentModel.FK_Purchaser_City", "Purchaser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Supplier_City", "Supplier")]
        public EntityCollection<Supplier> Supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Supplier>("AutoRentModel.FK_Supplier_City", "Supplier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Supplier>("AutoRentModel.FK_Supplier_City", "Supplier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_TechnicalService_City", "TechnicalService")]
        public EntityCollection<TechnicalService> TechnicalService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TechnicalService>("AutoRentModel.FK_TechnicalService_City", "TechnicalService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TechnicalService>("AutoRentModel.FK_TechnicalService_City", "TechnicalService", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoRentModel", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="insuarance">Initial value of the Insuarance property.</param>
        /// <param name="passport">Initial value of the Passport property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        public static Customer CreateCustomer(global::System.Int32 id, global::System.String firstName, global::System.String lastName, global::System.String insuarance, global::System.String passport, global::System.String phone)
        {
            Customer customer = new Customer();
            customer.Id = id;
            customer.FirstName = firstName;
            customer.LastName = lastName;
            customer.Insuarance = insuarance;
            customer.Passport = passport;
            customer.Phone = phone;
            return customer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Insuarance
        {
            get
            {
                return _Insuarance;
            }
            set
            {
                OnInsuaranceChanging(value);
                ReportPropertyChanging("Insuarance");
                _Insuarance = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Insuarance");
                OnInsuaranceChanged();
            }
        }
        private global::System.String _Insuarance;
        partial void OnInsuaranceChanging(global::System.String value);
        partial void OnInsuaranceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Passport
        {
            get
            {
                return _Passport;
            }
            set
            {
                OnPassportChanging(value);
                ReportPropertyChanging("Passport");
                _Passport = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Passport");
                OnPassportChanged();
            }
        }
        private global::System.String _Passport;
        partial void OnPassportChanging(global::System.String value);
        partial void OnPassportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Order_Customer", "Order")]
        public EntityCollection<Order> Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("AutoRentModel.FK_Order_Customer", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("AutoRentModel.FK_Order_Customer", "Order", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoRentModel", Name="Damage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Damage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Damage object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        public static Damage CreateDamage(global::System.Int32 id, global::System.String name, global::System.Decimal price)
        {
            Damage damage = new Damage();
            damage.Id = id;
            damage.Name = name;
            damage.Price = price;
            return damage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_OrdinaryDamage_Damage", "OrdinaryDamage")]
        public EntityCollection<OrdinaryDamage> OrdinaryDamage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrdinaryDamage>("AutoRentModel.FK_OrdinaryDamage_Damage", "OrdinaryDamage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrdinaryDamage>("AutoRentModel.FK_OrdinaryDamage_Damage", "OrdinaryDamage", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoRentModel", Name="Department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Department : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Department object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="cityId">Initial value of the CityId property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        public static Department CreateDepartment(global::System.Int32 id, global::System.Int32 cityId, global::System.String address, global::System.String phone)
        {
            Department department = new Department();
            department.Id = id;
            department.CityId = cityId;
            department.Address = address;
            department.Phone = phone;
            return department;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                OnCityIdChanging(value);
                ReportPropertyChanging("CityId");
                _CityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityId");
                OnCityIdChanged();
            }
        }
        private global::System.Int32 _CityId;
        partial void OnCityIdChanging(global::System.Int32 value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Application_DepartmentPickUp", "Application")]
        public EntityCollection<Application> Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application>("AutoRentModel.FK_Application_DepartmentPickUp", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application>("AutoRentModel.FK_Application_DepartmentPickUp", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Application_DepartmentRet", "Application")]
        public EntityCollection<Application> Application1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application>("AutoRentModel.FK_Application_DepartmentRet", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application>("AutoRentModel.FK_Application_DepartmentRet", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Department_City", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("AutoRentModel.FK_Department_City", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("AutoRentModel.FK_Department_City", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("AutoRentModel.FK_Department_City", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("AutoRentModel.FK_Department_City", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Employee_Department", "Employee")]
        public EntityCollection<Employee> Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("AutoRentModel.FK_Employee_Department", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("AutoRentModel.FK_Employee_Department", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Order_DepartmentPickup", "Order")]
        public EntityCollection<Order> Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("AutoRentModel.FK_Order_DepartmentPickup", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("AutoRentModel.FK_Order_DepartmentPickup", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Order_DepartmentRetrn", "Order")]
        public EntityCollection<Order> Order1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("AutoRentModel.FK_Order_DepartmentRetrn", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("AutoRentModel.FK_Order_DepartmentRetrn", "Order", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoRentModel", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="departmentId">Initial value of the DepartmentId property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="position">Initial value of the Position property.</param>
        /// <param name="hireDate">Initial value of the HireDate property.</param>
        /// <param name="cityId">Initial value of the CityId property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        public static Employee CreateEmployee(global::System.Int32 id, global::System.Int32 departmentId, global::System.String firstName, global::System.String lastName, global::System.String position, global::System.DateTime hireDate, global::System.Int32 cityId, global::System.String address, global::System.String phone)
        {
            Employee employee = new Employee();
            employee.Id = id;
            employee.DepartmentId = departmentId;
            employee.FirstName = firstName;
            employee.LastName = lastName;
            employee.Position = position;
            employee.HireDate = hireDate;
            employee.CityId = cityId;
            employee.Address = address;
            employee.Phone = phone;
            return employee;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentId
        {
            get
            {
                return _DepartmentId;
            }
            set
            {
                OnDepartmentIdChanging(value);
                ReportPropertyChanging("DepartmentId");
                _DepartmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentId");
                OnDepartmentIdChanged();
            }
        }
        private global::System.Int32 _DepartmentId;
        partial void OnDepartmentIdChanging(global::System.Int32 value);
        partial void OnDepartmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IdentificationCode
        {
            get
            {
                return _IdentificationCode;
            }
            set
            {
                OnIdentificationCodeChanging(value);
                ReportPropertyChanging("IdentificationCode");
                _IdentificationCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IdentificationCode");
                OnIdentificationCodeChanged();
            }
        }
        private global::System.String _IdentificationCode;
        partial void OnIdentificationCodeChanging(global::System.String value);
        partial void OnIdentificationCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Birthday
        {
            get
            {
                return _Birthday;
            }
            set
            {
                OnBirthdayChanging(value);
                ReportPropertyChanging("Birthday");
                _Birthday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthday");
                OnBirthdayChanged();
            }
        }
        private Nullable<global::System.DateTime> _Birthday;
        partial void OnBirthdayChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Passport
        {
            get
            {
                return _Passport;
            }
            set
            {
                OnPassportChanging(value);
                ReportPropertyChanging("Passport");
                _Passport = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Passport");
                OnPassportChanged();
            }
        }
        private global::System.String _Passport;
        partial void OnPassportChanging(global::System.String value);
        partial void OnPassportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.String _Position;
        partial void OnPositionChanging(global::System.String value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime HireDate
        {
            get
            {
                return _HireDate;
            }
            set
            {
                OnHireDateChanging(value);
                ReportPropertyChanging("HireDate");
                _HireDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HireDate");
                OnHireDateChanged();
            }
        }
        private global::System.DateTime _HireDate;
        partial void OnHireDateChanging(global::System.DateTime value);
        partial void OnHireDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FireDate
        {
            get
            {
                return _FireDate;
            }
            set
            {
                OnFireDateChanging(value);
                ReportPropertyChanging("FireDate");
                _FireDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FireDate");
                OnFireDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FireDate;
        partial void OnFireDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFireDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                OnCityIdChanging(value);
                ReportPropertyChanging("CityId");
                _CityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityId");
                OnCityIdChanged();
            }
        }
        private global::System.Int32 _CityId;
        partial void OnCityIdChanging(global::System.Int32 value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_ChargeOffOrder_EmployeeManager", "ChargeOffOrder")]
        public EntityCollection<ChargeOffOrder> ChargeOffOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChargeOffOrder>("AutoRentModel.FK_ChargeOffOrder_EmployeeManager", "ChargeOffOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChargeOffOrder>("AutoRentModel.FK_ChargeOffOrder_EmployeeManager", "ChargeOffOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_ChargeOffOrder_EmployeeMechanic", "ChargeOffOrder")]
        public EntityCollection<ChargeOffOrder> ChargeOffOrder1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChargeOffOrder>("AutoRentModel.FK_ChargeOffOrder_EmployeeMechanic", "ChargeOffOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChargeOffOrder>("AutoRentModel.FK_ChargeOffOrder_EmployeeMechanic", "ChargeOffOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Employee_City", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("AutoRentModel.FK_Employee_City", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("AutoRentModel.FK_Employee_City", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("AutoRentModel.FK_Employee_City", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("AutoRentModel.FK_Employee_City", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Employee_Department", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("AutoRentModel.FK_Employee_Department", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("AutoRentModel.FK_Employee_Department", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("AutoRentModel.FK_Employee_Department", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("AutoRentModel.FK_Employee_Department", "Department", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoRentModel", Name="EvacuationOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EvacuationOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EvacuationOrder object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="orderId">Initial value of the OrderId property.</param>
        /// <param name="cityId">Initial value of the CityId property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        public static EvacuationOrder CreateEvacuationOrder(global::System.Int32 id, global::System.Int32 orderId, global::System.Int32 cityId, global::System.String address)
        {
            EvacuationOrder evacuationOrder = new EvacuationOrder();
            evacuationOrder.Id = id;
            evacuationOrder.OrderId = orderId;
            evacuationOrder.CityId = cityId;
            evacuationOrder.Address = address;
            return evacuationOrder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderId
        {
            get
            {
                return _OrderId;
            }
            set
            {
                OnOrderIdChanging(value);
                ReportPropertyChanging("OrderId");
                _OrderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderId");
                OnOrderIdChanged();
            }
        }
        private global::System.Int32 _OrderId;
        partial void OnOrderIdChanging(global::System.Int32 value);
        partial void OnOrderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                OnCityIdChanging(value);
                ReportPropertyChanging("CityId");
                _CityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityId");
                OnCityIdChanged();
            }
        }
        private global::System.Int32 _CityId;
        partial void OnCityIdChanging(global::System.Int32 value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _Value;
        partial void OnValueChanging(Nullable<global::System.Decimal> value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_EvacuationOrder_City", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("AutoRentModel.FK_EvacuationOrder_City", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("AutoRentModel.FK_EvacuationOrder_City", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("AutoRentModel.FK_EvacuationOrder_City", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("AutoRentModel.FK_EvacuationOrder_City", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_EvacuationOrder_Order", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("AutoRentModel.FK_EvacuationOrder_Order", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("AutoRentModel.FK_EvacuationOrder_Order", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("AutoRentModel.FK_EvacuationOrder_Order", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("AutoRentModel.FK_EvacuationOrder_Order", "Order", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoRentModel", Name="ExtraDamage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExtraDamage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExtraDamage object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="autoId">Initial value of the AutoId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        public static ExtraDamage CreateExtraDamage(global::System.Int32 id, global::System.Int32 autoId, global::System.String name, global::System.String description, global::System.Decimal price)
        {
            ExtraDamage extraDamage = new ExtraDamage();
            extraDamage.Id = id;
            extraDamage.AutoId = autoId;
            extraDamage.Name = name;
            extraDamage.Description = description;
            extraDamage.Price = price;
            return extraDamage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AutoId
        {
            get
            {
                return _AutoId;
            }
            set
            {
                OnAutoIdChanging(value);
                ReportPropertyChanging("AutoId");
                _AutoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoId");
                OnAutoIdChanged();
            }
        }
        private global::System.Int32 _AutoId;
        partial void OnAutoIdChanging(global::System.Int32 value);
        partial void OnAutoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DamageDate
        {
            get
            {
                return _DamageDate;
            }
            set
            {
                OnDamageDateChanging(value);
                ReportPropertyChanging("DamageDate");
                _DamageDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DamageDate");
                OnDamageDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DamageDate;
        partial void OnDamageDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDamageDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FixDate
        {
            get
            {
                return _FixDate;
            }
            set
            {
                OnFixDateChanging(value);
                ReportPropertyChanging("FixDate");
                _FixDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FixDate");
                OnFixDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FixDate;
        partial void OnFixDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFixDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_ExtraDamage_Auto", "Auto")]
        public Auto Auto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auto>("AutoRentModel.FK_ExtraDamage_Auto", "Auto").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auto>("AutoRentModel.FK_ExtraDamage_Auto", "Auto").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Auto> AutoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auto>("AutoRentModel.FK_ExtraDamage_Auto", "Auto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Auto>("AutoRentModel.FK_ExtraDamage_Auto", "Auto", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoRentModel", Name="Insuarance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Insuarance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Insuarance object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="insuaranceAgencyId">Initial value of the InsuaranceAgencyId property.</param>
        public static Insuarance CreateInsuarance(global::System.Int32 id, global::System.String number, global::System.Int32 insuaranceAgencyId)
        {
            Insuarance insuarance = new Insuarance();
            insuarance.Id = id;
            insuarance.Number = number;
            insuarance.InsuaranceAgencyId = insuaranceAgencyId;
            return insuarance;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InsuaranceAgencyId
        {
            get
            {
                return _InsuaranceAgencyId;
            }
            set
            {
                OnInsuaranceAgencyIdChanging(value);
                ReportPropertyChanging("InsuaranceAgencyId");
                _InsuaranceAgencyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InsuaranceAgencyId");
                OnInsuaranceAgencyIdChanged();
            }
        }
        private global::System.Int32 _InsuaranceAgencyId;
        partial void OnInsuaranceAgencyIdChanging(global::System.Int32 value);
        partial void OnInsuaranceAgencyIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Auto_Insuarance", "Auto")]
        public EntityCollection<Auto> Auto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Auto>("AutoRentModel.FK_Auto_Insuarance", "Auto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Auto>("AutoRentModel.FK_Auto_Insuarance", "Auto", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Insuarance_InsuaranceAgency", "InsuaranceAgency")]
        public InsuaranceAgency InsuaranceAgency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InsuaranceAgency>("AutoRentModel.FK_Insuarance_InsuaranceAgency", "InsuaranceAgency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InsuaranceAgency>("AutoRentModel.FK_Insuarance_InsuaranceAgency", "InsuaranceAgency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InsuaranceAgency> InsuaranceAgencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InsuaranceAgency>("AutoRentModel.FK_Insuarance_InsuaranceAgency", "InsuaranceAgency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InsuaranceAgency>("AutoRentModel.FK_Insuarance_InsuaranceAgency", "InsuaranceAgency", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoRentModel", Name="InsuaranceAgency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InsuaranceAgency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InsuaranceAgency object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="cityId">Initial value of the CityId property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        public static InsuaranceAgency CreateInsuaranceAgency(global::System.Int32 id, global::System.String name, global::System.Int32 cityId, global::System.String address, global::System.String phone)
        {
            InsuaranceAgency insuaranceAgency = new InsuaranceAgency();
            insuaranceAgency.Id = id;
            insuaranceAgency.Name = name;
            insuaranceAgency.CityId = cityId;
            insuaranceAgency.Address = address;
            insuaranceAgency.Phone = phone;
            return insuaranceAgency;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                OnCityIdChanging(value);
                ReportPropertyChanging("CityId");
                _CityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityId");
                OnCityIdChanged();
            }
        }
        private global::System.Int32 _CityId;
        partial void OnCityIdChanging(global::System.Int32 value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_InsuaranceAgency_City", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("AutoRentModel.FK_InsuaranceAgency_City", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("AutoRentModel.FK_InsuaranceAgency_City", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("AutoRentModel.FK_InsuaranceAgency_City", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("AutoRentModel.FK_InsuaranceAgency_City", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Insuarance_InsuaranceAgency", "Insuarance")]
        public EntityCollection<Insuarance> Insuarance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Insuarance>("AutoRentModel.FK_Insuarance_InsuaranceAgency", "Insuarance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Insuarance>("AutoRentModel.FK_Insuarance_InsuaranceAgency", "Insuarance", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoRentModel", Name="Make")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Make : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Make object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Make CreateMake(global::System.Int32 id, global::System.String name)
        {
            Make make = new Make();
            make.Id = id;
            make.Name = name;
            return make;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Model_Make", "Model")]
        public EntityCollection<Model> Model
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Model>("AutoRentModel.FK_Model_Make", "Model");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Model>("AutoRentModel.FK_Model_Make", "Model", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoRentModel", Name="Model")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Model : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Model object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="makeId">Initial value of the MakeId property.</param>
        public static Model CreateModel(global::System.Int32 id, global::System.String name, global::System.Int32 makeId)
        {
            Model model = new Model();
            model.Id = id;
            model.Name = name;
            model.MakeId = makeId;
            return model;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MakeId
        {
            get
            {
                return _MakeId;
            }
            set
            {
                OnMakeIdChanging(value);
                ReportPropertyChanging("MakeId");
                _MakeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MakeId");
                OnMakeIdChanged();
            }
        }
        private global::System.Int32 _MakeId;
        partial void OnMakeIdChanging(global::System.Int32 value);
        partial void OnMakeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Photo
        {
            get
            {
                return StructuralObject.GetValidValue(_Photo);
            }
            set
            {
                OnPhotoChanging(value);
                ReportPropertyChanging("Photo");
                _Photo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Photo");
                OnPhotoChanged();
            }
        }
        private global::System.Byte[] _Photo;
        partial void OnPhotoChanging(global::System.Byte[] value);
        partial void OnPhotoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> KmRate
        {
            get
            {
                return _KmRate;
            }
            set
            {
                OnKmRateChanging(value);
                ReportPropertyChanging("KmRate");
                _KmRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KmRate");
                OnKmRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _KmRate;
        partial void OnKmRateChanging(Nullable<global::System.Decimal> value);
        partial void OnKmRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DayRate
        {
            get
            {
                return _DayRate;
            }
            set
            {
                OnDayRateChanging(value);
                ReportPropertyChanging("DayRate");
                _DayRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayRate");
                OnDayRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _DayRate;
        partial void OnDayRateChanging(Nullable<global::System.Decimal> value);
        partial void OnDayRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Engine
        {
            get
            {
                return _Engine;
            }
            set
            {
                OnEngineChanging(value);
                ReportPropertyChanging("Engine");
                _Engine = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Engine");
                OnEngineChanged();
            }
        }
        private global::System.String _Engine;
        partial void OnEngineChanging(global::System.String value);
        partial void OnEngineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Seats
        {
            get
            {
                return _Seats;
            }
            set
            {
                OnSeatsChanging(value);
                ReportPropertyChanging("Seats");
                _Seats = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Seats");
                OnSeatsChanged();
            }
        }
        private Nullable<global::System.Int16> _Seats;
        partial void OnSeatsChanging(Nullable<global::System.Int16> value);
        partial void OnSeatsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Deposit
        {
            get
            {
                return _Deposit;
            }
            set
            {
                OnDepositChanging(value);
                ReportPropertyChanging("Deposit");
                _Deposit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deposit");
                OnDepositChanged();
            }
        }
        private Nullable<global::System.Decimal> _Deposit;
        partial void OnDepositChanging(Nullable<global::System.Decimal> value);
        partial void OnDepositChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Application_Model", "Application")]
        public EntityCollection<Application> Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application>("AutoRentModel.FK_Application_Model", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application>("AutoRentModel.FK_Application_Model", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Auto_Model", "Auto")]
        public EntityCollection<Auto> Auto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Auto>("AutoRentModel.FK_Auto_Model", "Auto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Auto>("AutoRentModel.FK_Auto_Model", "Auto", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Model_Make", "Make")]
        public Make Make
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Make>("AutoRentModel.FK_Model_Make", "Make").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Make>("AutoRentModel.FK_Model_Make", "Make").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Make> MakeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Make>("AutoRentModel.FK_Model_Make", "Make");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Make>("AutoRentModel.FK_Model_Make", "Make", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_SupplyOrder_Model", "SupplyOrder")]
        public EntityCollection<SupplyOrder> SupplyOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SupplyOrder>("AutoRentModel.FK_SupplyOrder_Model", "SupplyOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SupplyOrder>("AutoRentModel.FK_SupplyOrder_Model", "SupplyOrder", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoRentModel", Name="Order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Order : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Order object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="customerId">Initial value of the CustomerId property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="rentType">Initial value of the RentType property.</param>
        public static Order CreateOrder(global::System.Int32 id, global::System.Int32 customerId, global::System.Int16 status, global::System.Int16 rentType)
        {
            Order order = new Order();
            order.Id = id;
            order.CustomerId = customerId;
            order.Status = status;
            order.RentType = rentType;
            return order;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CloseDate
        {
            get
            {
                return _CloseDate;
            }
            set
            {
                OnCloseDateChanging(value);
                ReportPropertyChanging("CloseDate");
                _CloseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CloseDate");
                OnCloseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CloseDate;
        partial void OnCloseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCloseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                OnCustomerIdChanging(value);
                ReportPropertyChanging("CustomerId");
                _CustomerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerId");
                OnCustomerIdChanged();
            }
        }
        private global::System.Int32 _CustomerId;
        partial void OnCustomerIdChanging(global::System.Int32 value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AutoId
        {
            get
            {
                return _AutoId;
            }
            set
            {
                OnAutoIdChanging(value);
                ReportPropertyChanging("AutoId");
                _AutoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoId");
                OnAutoIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AutoId;
        partial void OnAutoIdChanging(Nullable<global::System.Int32> value);
        partial void OnAutoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PickupDate
        {
            get
            {
                return _PickupDate;
            }
            set
            {
                OnPickupDateChanging(value);
                ReportPropertyChanging("PickupDate");
                _PickupDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PickupDate");
                OnPickupDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PickupDate;
        partial void OnPickupDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPickupDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PickupDepartmentId
        {
            get
            {
                return _PickupDepartmentId;
            }
            set
            {
                OnPickupDepartmentIdChanging(value);
                ReportPropertyChanging("PickupDepartmentId");
                _PickupDepartmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PickupDepartmentId");
                OnPickupDepartmentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PickupDepartmentId;
        partial void OnPickupDepartmentIdChanging(Nullable<global::System.Int32> value);
        partial void OnPickupDepartmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReturnDate
        {
            get
            {
                return _ReturnDate;
            }
            set
            {
                OnReturnDateChanging(value);
                ReportPropertyChanging("ReturnDate");
                _ReturnDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReturnDate");
                OnReturnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReturnDate;
        partial void OnReturnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReturnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReturnDepartmentId
        {
            get
            {
                return _ReturnDepartmentId;
            }
            set
            {
                OnReturnDepartmentIdChanging(value);
                ReportPropertyChanging("ReturnDepartmentId");
                _ReturnDepartmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReturnDepartmentId");
                OnReturnDepartmentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ReturnDepartmentId;
        partial void OnReturnDepartmentIdChanging(Nullable<global::System.Int32> value);
        partial void OnReturnDepartmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int16 _Status;
        partial void OnStatusChanging(global::System.Int16 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 RentType
        {
            get
            {
                return _RentType;
            }
            set
            {
                OnRentTypeChanging(value);
                ReportPropertyChanging("RentType");
                _RentType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RentType");
                OnRentTypeChanged();
            }
        }
        private global::System.Int16 _RentType;
        partial void OnRentTypeChanging(global::System.Int16 value);
        partial void OnRentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> PaymentType
        {
            get
            {
                return _PaymentType;
            }
            set
            {
                OnPaymentTypeChanging(value);
                ReportPropertyChanging("PaymentType");
                _PaymentType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentType");
                OnPaymentTypeChanged();
            }
        }
        private Nullable<global::System.Int16> _PaymentType;
        partial void OnPaymentTypeChanging(Nullable<global::System.Int16> value);
        partial void OnPaymentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PaymentSum
        {
            get
            {
                return _PaymentSum;
            }
            set
            {
                OnPaymentSumChanging(value);
                ReportPropertyChanging("PaymentSum");
                _PaymentSum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentSum");
                OnPaymentSumChanged();
            }
        }
        private Nullable<global::System.Decimal> _PaymentSum;
        partial void OnPaymentSumChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentSumChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Order_Auto", "Auto")]
        public Auto Auto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auto>("AutoRentModel.FK_Order_Auto", "Auto").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auto>("AutoRentModel.FK_Order_Auto", "Auto").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Auto> AutoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auto>("AutoRentModel.FK_Order_Auto", "Auto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Auto>("AutoRentModel.FK_Order_Auto", "Auto", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Order_Customer", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("AutoRentModel.FK_Order_Customer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("AutoRentModel.FK_Order_Customer", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("AutoRentModel.FK_Order_Customer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("AutoRentModel.FK_Order_Customer", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Order_DepartmentPickup", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("AutoRentModel.FK_Order_DepartmentPickup", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("AutoRentModel.FK_Order_DepartmentPickup", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("AutoRentModel.FK_Order_DepartmentPickup", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("AutoRentModel.FK_Order_DepartmentPickup", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Order_DepartmentRetrn", "Department")]
        public Department Department1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("AutoRentModel.FK_Order_DepartmentRetrn", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("AutoRentModel.FK_Order_DepartmentRetrn", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> Department1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("AutoRentModel.FK_Order_DepartmentRetrn", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("AutoRentModel.FK_Order_DepartmentRetrn", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_EvacuationOrder_Order", "EvacuationOrder")]
        public EntityCollection<EvacuationOrder> EvacuationOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EvacuationOrder>("AutoRentModel.FK_EvacuationOrder_Order", "EvacuationOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EvacuationOrder>("AutoRentModel.FK_EvacuationOrder_Order", "EvacuationOrder", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoRentModel", Name="OrdinaryDamage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrdinaryDamage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrdinaryDamage object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="autoId">Initial value of the AutoId property.</param>
        /// <param name="damageId">Initial value of the DamageId property.</param>
        /// <param name="damageDate">Initial value of the DamageDate property.</param>
        /// <param name="fixDate">Initial value of the FixDate property.</param>
        public static OrdinaryDamage CreateOrdinaryDamage(global::System.Int32 id, global::System.Int32 autoId, global::System.Int32 damageId, global::System.DateTime damageDate, global::System.DateTime fixDate)
        {
            OrdinaryDamage ordinaryDamage = new OrdinaryDamage();
            ordinaryDamage.Id = id;
            ordinaryDamage.AutoId = autoId;
            ordinaryDamage.DamageId = damageId;
            ordinaryDamage.DamageDate = damageDate;
            ordinaryDamage.FixDate = fixDate;
            return ordinaryDamage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AutoId
        {
            get
            {
                return _AutoId;
            }
            set
            {
                OnAutoIdChanging(value);
                ReportPropertyChanging("AutoId");
                _AutoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoId");
                OnAutoIdChanged();
            }
        }
        private global::System.Int32 _AutoId;
        partial void OnAutoIdChanging(global::System.Int32 value);
        partial void OnAutoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DamageId
        {
            get
            {
                return _DamageId;
            }
            set
            {
                OnDamageIdChanging(value);
                ReportPropertyChanging("DamageId");
                _DamageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DamageId");
                OnDamageIdChanged();
            }
        }
        private global::System.Int32 _DamageId;
        partial void OnDamageIdChanging(global::System.Int32 value);
        partial void OnDamageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DamageDate
        {
            get
            {
                return _DamageDate;
            }
            set
            {
                OnDamageDateChanging(value);
                ReportPropertyChanging("DamageDate");
                _DamageDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DamageDate");
                OnDamageDateChanged();
            }
        }
        private global::System.DateTime _DamageDate;
        partial void OnDamageDateChanging(global::System.DateTime value);
        partial void OnDamageDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FixDate
        {
            get
            {
                return _FixDate;
            }
            set
            {
                OnFixDateChanging(value);
                ReportPropertyChanging("FixDate");
                _FixDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FixDate");
                OnFixDateChanged();
            }
        }
        private global::System.DateTime _FixDate;
        partial void OnFixDateChanging(global::System.DateTime value);
        partial void OnFixDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_OrdinaryDamage_Auto", "Auto")]
        public Auto Auto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auto>("AutoRentModel.FK_OrdinaryDamage_Auto", "Auto").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auto>("AutoRentModel.FK_OrdinaryDamage_Auto", "Auto").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Auto> AutoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auto>("AutoRentModel.FK_OrdinaryDamage_Auto", "Auto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Auto>("AutoRentModel.FK_OrdinaryDamage_Auto", "Auto", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_OrdinaryDamage_Damage", "Damage")]
        public Damage Damage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Damage>("AutoRentModel.FK_OrdinaryDamage_Damage", "Damage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Damage>("AutoRentModel.FK_OrdinaryDamage_Damage", "Damage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Damage> DamageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Damage>("AutoRentModel.FK_OrdinaryDamage_Damage", "Damage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Damage>("AutoRentModel.FK_OrdinaryDamage_Damage", "Damage", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoRentModel", Name="PurchaseOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PurchaseOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PurchaseOrder object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="puchaserId">Initial value of the PuchaserId property.</param>
        /// <param name="autoId">Initial value of the AutoId property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        public static PurchaseOrder CreatePurchaseOrder(global::System.Int32 id, global::System.Int32 puchaserId, global::System.Int32 autoId, global::System.Decimal price)
        {
            PurchaseOrder purchaseOrder = new PurchaseOrder();
            purchaseOrder.Id = id;
            purchaseOrder.PuchaserId = puchaserId;
            purchaseOrder.AutoId = autoId;
            purchaseOrder.Price = price;
            return purchaseOrder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PuchaserId
        {
            get
            {
                return _PuchaserId;
            }
            set
            {
                OnPuchaserIdChanging(value);
                ReportPropertyChanging("PuchaserId");
                _PuchaserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PuchaserId");
                OnPuchaserIdChanged();
            }
        }
        private global::System.Int32 _PuchaserId;
        partial void OnPuchaserIdChanging(global::System.Int32 value);
        partial void OnPuchaserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AutoId
        {
            get
            {
                return _AutoId;
            }
            set
            {
                OnAutoIdChanging(value);
                ReportPropertyChanging("AutoId");
                _AutoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoId");
                OnAutoIdChanged();
            }
        }
        private global::System.Int32 _AutoId;
        partial void OnAutoIdChanging(global::System.Int32 value);
        partial void OnAutoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_PurchaseOrder_Auto", "Auto")]
        public Auto Auto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auto>("AutoRentModel.FK_PurchaseOrder_Auto", "Auto").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auto>("AutoRentModel.FK_PurchaseOrder_Auto", "Auto").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Auto> AutoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auto>("AutoRentModel.FK_PurchaseOrder_Auto", "Auto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Auto>("AutoRentModel.FK_PurchaseOrder_Auto", "Auto", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_PurchaseOrder_Purchaser", "Purchaser")]
        public Purchaser Purchaser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Purchaser>("AutoRentModel.FK_PurchaseOrder_Purchaser", "Purchaser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Purchaser>("AutoRentModel.FK_PurchaseOrder_Purchaser", "Purchaser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Purchaser> PurchaserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Purchaser>("AutoRentModel.FK_PurchaseOrder_Purchaser", "Purchaser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Purchaser>("AutoRentModel.FK_PurchaseOrder_Purchaser", "Purchaser", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoRentModel", Name="Purchaser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Purchaser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Purchaser object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="cityId">Initial value of the CityId property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        public static Purchaser CreatePurchaser(global::System.Int32 id, global::System.String name, global::System.Int32 cityId, global::System.String address, global::System.String phone)
        {
            Purchaser purchaser = new Purchaser();
            purchaser.Id = id;
            purchaser.Name = name;
            purchaser.CityId = cityId;
            purchaser.Address = address;
            purchaser.Phone = phone;
            return purchaser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                OnCityIdChanging(value);
                ReportPropertyChanging("CityId");
                _CityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityId");
                OnCityIdChanged();
            }
        }
        private global::System.Int32 _CityId;
        partial void OnCityIdChanging(global::System.Int32 value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Purchaser_City", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("AutoRentModel.FK_Purchaser_City", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("AutoRentModel.FK_Purchaser_City", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("AutoRentModel.FK_Purchaser_City", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("AutoRentModel.FK_Purchaser_City", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_PurchaseOrder_Purchaser", "PurchaseOrder")]
        public EntityCollection<PurchaseOrder> PurchaseOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseOrder>("AutoRentModel.FK_PurchaseOrder_Purchaser", "PurchaseOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseOrder>("AutoRentModel.FK_PurchaseOrder_Purchaser", "PurchaseOrder", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoRentModel", Name="Repair")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Repair : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Repair object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="autoId">Initial value of the AutoId property.</param>
        /// <param name="technicalServiceId">Initial value of the TechnicalServiceId property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        public static Repair CreateRepair(global::System.Int32 id, global::System.Int32 autoId, global::System.Int32 technicalServiceId, global::System.DateTime startDate)
        {
            Repair repair = new Repair();
            repair.Id = id;
            repair.AutoId = autoId;
            repair.TechnicalServiceId = technicalServiceId;
            repair.StartDate = startDate;
            return repair;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AutoId
        {
            get
            {
                return _AutoId;
            }
            set
            {
                OnAutoIdChanging(value);
                ReportPropertyChanging("AutoId");
                _AutoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoId");
                OnAutoIdChanged();
            }
        }
        private global::System.Int32 _AutoId;
        partial void OnAutoIdChanging(global::System.Int32 value);
        partial void OnAutoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TechnicalServiceId
        {
            get
            {
                return _TechnicalServiceId;
            }
            set
            {
                OnTechnicalServiceIdChanging(value);
                ReportPropertyChanging("TechnicalServiceId");
                _TechnicalServiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TechnicalServiceId");
                OnTechnicalServiceIdChanged();
            }
        }
        private global::System.Int32 _TechnicalServiceId;
        partial void OnTechnicalServiceIdChanging(global::System.Int32 value);
        partial void OnTechnicalServiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PaymentSum
        {
            get
            {
                return _PaymentSum;
            }
            set
            {
                OnPaymentSumChanging(value);
                ReportPropertyChanging("PaymentSum");
                _PaymentSum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentSum");
                OnPaymentSumChanged();
            }
        }
        private Nullable<global::System.Decimal> _PaymentSum;
        partial void OnPaymentSumChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentSumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Repair_Auto", "Auto")]
        public Auto Auto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auto>("AutoRentModel.FK_Repair_Auto", "Auto").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auto>("AutoRentModel.FK_Repair_Auto", "Auto").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Auto> AutoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auto>("AutoRentModel.FK_Repair_Auto", "Auto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Auto>("AutoRentModel.FK_Repair_Auto", "Auto", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Repair_TechnicalService", "TechnicalService")]
        public TechnicalService TechnicalService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TechnicalService>("AutoRentModel.FK_Repair_TechnicalService", "TechnicalService").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TechnicalService>("AutoRentModel.FK_Repair_TechnicalService", "TechnicalService").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TechnicalService> TechnicalServiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TechnicalService>("AutoRentModel.FK_Repair_TechnicalService", "TechnicalService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TechnicalService>("AutoRentModel.FK_Repair_TechnicalService", "TechnicalService", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoRentModel", Name="Supplier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Supplier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Supplier object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="cityId">Initial value of the CityId property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        public static Supplier CreateSupplier(global::System.Int32 id, global::System.String name, global::System.Int32 cityId, global::System.String address, global::System.String phone)
        {
            Supplier supplier = new Supplier();
            supplier.Id = id;
            supplier.Name = name;
            supplier.CityId = cityId;
            supplier.Address = address;
            supplier.Phone = phone;
            return supplier;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                OnCityIdChanging(value);
                ReportPropertyChanging("CityId");
                _CityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityId");
                OnCityIdChanged();
            }
        }
        private global::System.Int32 _CityId;
        partial void OnCityIdChanging(global::System.Int32 value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Supplier_City", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("AutoRentModel.FK_Supplier_City", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("AutoRentModel.FK_Supplier_City", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("AutoRentModel.FK_Supplier_City", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("AutoRentModel.FK_Supplier_City", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_SupplyOrder_Supplier", "SupplyOrder")]
        public EntityCollection<SupplyOrder> SupplyOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SupplyOrder>("AutoRentModel.FK_SupplyOrder_Supplier", "SupplyOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SupplyOrder>("AutoRentModel.FK_SupplyOrder_Supplier", "SupplyOrder", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoRentModel", Name="SupplyOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SupplyOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SupplyOrder object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="supplierId">Initial value of the SupplierId property.</param>
        /// <param name="modelId">Initial value of the ModelId property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static SupplyOrder CreateSupplyOrder(global::System.Int32 id, global::System.Int32 supplierId, global::System.Int32 modelId, global::System.Decimal price, global::System.Int16 quantity)
        {
            SupplyOrder supplyOrder = new SupplyOrder();
            supplyOrder.Id = id;
            supplyOrder.SupplierId = supplierId;
            supplyOrder.ModelId = modelId;
            supplyOrder.Price = price;
            supplyOrder.Quantity = quantity;
            return supplyOrder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SupplierId
        {
            get
            {
                return _SupplierId;
            }
            set
            {
                OnSupplierIdChanging(value);
                ReportPropertyChanging("SupplierId");
                _SupplierId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SupplierId");
                OnSupplierIdChanged();
            }
        }
        private global::System.Int32 _SupplierId;
        partial void OnSupplierIdChanging(global::System.Int32 value);
        partial void OnSupplierIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModelId
        {
            get
            {
                return _ModelId;
            }
            set
            {
                OnModelIdChanging(value);
                ReportPropertyChanging("ModelId");
                _ModelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModelId");
                OnModelIdChanged();
            }
        }
        private global::System.Int32 _ModelId;
        partial void OnModelIdChanging(global::System.Int32 value);
        partial void OnModelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int16 _Quantity;
        partial void OnQuantityChanging(global::System.Int16 value);
        partial void OnQuantityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_SupplyOrder_Model", "Model")]
        public Model Model
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Model>("AutoRentModel.FK_SupplyOrder_Model", "Model").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Model>("AutoRentModel.FK_SupplyOrder_Model", "Model").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Model> ModelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Model>("AutoRentModel.FK_SupplyOrder_Model", "Model");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Model>("AutoRentModel.FK_SupplyOrder_Model", "Model", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_SupplyOrder_Supplier", "Supplier")]
        public Supplier Supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("AutoRentModel.FK_SupplyOrder_Supplier", "Supplier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("AutoRentModel.FK_SupplyOrder_Supplier", "Supplier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supplier> SupplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("AutoRentModel.FK_SupplyOrder_Supplier", "Supplier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier>("AutoRentModel.FK_SupplyOrder_Supplier", "Supplier", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoRentModel", Name="TechnicalService")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TechnicalService : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TechnicalService object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="cityId">Initial value of the CityId property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        public static TechnicalService CreateTechnicalService(global::System.Int32 id, global::System.String name, global::System.Int32 cityId, global::System.String address, global::System.String phone)
        {
            TechnicalService technicalService = new TechnicalService();
            technicalService.Id = id;
            technicalService.Name = name;
            technicalService.CityId = cityId;
            technicalService.Address = address;
            technicalService.Phone = phone;
            return technicalService;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                OnCityIdChanging(value);
                ReportPropertyChanging("CityId");
                _CityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityId");
                OnCityIdChanged();
            }
        }
        private global::System.Int32 _CityId;
        partial void OnCityIdChanging(global::System.Int32 value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_TechnicalService_City", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("AutoRentModel.FK_TechnicalService_City", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("AutoRentModel.FK_TechnicalService_City", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("AutoRentModel.FK_TechnicalService_City", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("AutoRentModel.FK_TechnicalService_City", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoRentModel", "FK_Repair_TechnicalService", "Repair")]
        public EntityCollection<Repair> Repair
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Repair>("AutoRentModel.FK_Repair_TechnicalService", "Repair");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Repair>("AutoRentModel.FK_Repair_TechnicalService", "Repair", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
