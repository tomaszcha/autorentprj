<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VIBlend.Silverlight.Utilities</name>
    </assembly>
    <members>
        <member name="T:VIBlend.Silverlight.Utilities.HeaderedItemsControl">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.HeaderedItemsControl.HeaderProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.HeaderedItemsControl.HeaderTemplateProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.HeaderedItemsControl.ItemContainerStyleProperty">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.HeaderedItemsControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VIBlend.Silverlight.Utilities.HeaderedItemsControl"/> class.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.HeaderedItemsControl.OnHeaderChanged(System.Object,System.Object)">
            <summary>
            Called when [header changed].
            </summary>
            <param name="oldHeader">The old header.</param>
            <param name="newHeader">The new header.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.HeaderedItemsControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
            <summary>
            Called when [header template changed].
            </summary>
            <param name="oldHeaderTemplate">The old header template.</param>
            <param name="newHeaderTemplate">The new header template.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.HeaderedItemsControl.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.HeaderedItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">The element used to display the specified item.</param>
            <param name="item">The item to display.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.HeaderedItemsControl.PreparePrepareHeaderedItemsControlContainerForItemOverride(System.Windows.DependencyObject,System.Object,System.Windows.Controls.ItemsControl,System.Windows.Style)">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.HeaderedItemsControl.PrepareHeaderedItemsControlContainer(VIBlend.Silverlight.Utilities.HeaderedItemsControl,System.Object,System.Windows.Controls.ItemsControl,System.Windows.Style,System.Boolean)">
            <exclude/>
        </member>
        <member name="P:VIBlend.Silverlight.Utilities.HeaderedItemsControl.Header">
            <exclude/>
        </member>
        <member name="P:VIBlend.Silverlight.Utilities.HeaderedItemsControl.HeaderTemplate">
            <exclude/>
        </member>
        <member name="P:VIBlend.Silverlight.Utilities.HeaderedItemsControl.ItemContainerStyle">
            <summary>
            Gets or sets the item container style.
            </summary>
            <value>The item container style.</value>
        </member>
        <member name="T:VIBlend.Silverlight.Controls.DragCancelEventArgs">
            <summary>
            Represents the DragCancelEventArgs class.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.DragCancelEventArgs.#ctor(System.Double,System.Double,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
            <summary>
            Initializes a new instance of the <see cref="T:VIBlend.Silverlight.Controls.DragCancelEventArgs"/> class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.DragCancelEventArgs.SourceElement">
            <summary>
            Gets the source element.
            </summary>
            <value>The source element.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.DragCancelEventArgs.TargetElement">
            <summary>
            Gets the target element.
            </summary>
            <value>The target element.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.DragCancelEventArgs.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.DragCancelEventArgs.X">
            <summary>
            Gets the X.
            </summary>
            <value>The X.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.DragCancelEventArgs.Y">
            <summary>
            Gets the Y.
            </summary>
            <value>The Y.</value>
        </member>
        <member name="T:VIBlend.Silverlight.Controls.MouseButton">
            <summary>
            Enumeration of the mouse device buttons.
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.MouseButton.Left">
            <summary>
            The left mouse button. 
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.MouseButton.Middle">
            <summary>
            The middle mouse button. 
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.MouseButton.Right">
            <summary>
            The right mouse button. 
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.MouseButton.XButton1">
            <summary>
            The first extended mouse button. 
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.MouseButton.XButton2">
            <summary>
            The second extended mouse button. 
            </summary>
        </member>
        <member name="T:VIBlend.Silverlight.Controls.LayoutTransformer">
            <exclude/>   
        </member>
        <member name="F:VIBlend.Silverlight.Controls.LayoutTransformer.AcceptableDelta">
            <summary>
            Acceptable difference between two doubles.
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.LayoutTransformer.DecimalsAfterRound">
            <summary>
            Number of decimals to round the Matrix to.
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.LayoutTransformer.LayoutTransformProperty">
            <summary>
            Identifies the LayoutTransform DependencyProperty.
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.LayoutTransformer._transformRoot">
            <summary>
            Root element for performing transformations.
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.LayoutTransformer._contentPresenter">
            <summary>
            ContentPresenter element for displaying the content.
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.LayoutTransformer._matrixTransform">
            <summary>
            RenderTransform/MatrixTransform applied to _transformRoot.
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.LayoutTransformer._transformation">
            <summary>
            Transformation matrix corresponding to _matrixTransform.
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.LayoutTransformer._childActualSize">
            <summary>
            Actual DesiredSize of Child element (the value it returned from its MeasureOverride method).
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.LayoutTransformer.#ctor">
            <summary>
            Initializes a new instance of the LayoutTransformer class.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.LayoutTransformer.OnApplyTemplate">
            <summary>
            Builds the visual tree for the LayoutTransformer control when a new 
            template is applied.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.LayoutTransformer.LayoutTransformChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Transform DependencyProperty.
            </summary>
            <param name="o">Source of the change.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.LayoutTransformer.ApplyLayoutTransform">
            <summary>
            Applies the layout transform on the LayoutTransformer control content.
            </summary>
            <remarks>
            Only used in advanced scenarios (like animating the LayoutTransform). 
            Should be used to notify the LayoutTransformer control that some aspect 
            of its Transform property has changed. 
            </remarks>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.LayoutTransformer.ProcessTransform(System.Windows.Media.Transform)">
            <summary>
            Processes the Transform to determine the corresponding Matrix.
            </summary>
            <param name="transform">Transform to process.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.LayoutTransformer.GetTransformMatrix(System.Windows.Media.Transform)">
            <summary>
            Walks the Transform(Group) and returns the corresponding Matrix.
            </summary>
            <param name="transform">Transform(Group) to walk.</param>
            <returns>Computed Matrix.</returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.LayoutTransformer.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "Measure" pass of layout.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements.</param>
            <returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.LayoutTransformer.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "Arrange" pass of layout.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
            <remarks>
            Using the WPF paramater name finalSize instead of Silverlight's finalSize for clarity
            </remarks>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.LayoutTransformer.ComputeLargestTransformedSize(System.Windows.Size)">
            <summary>
            Compute the largest usable size (greatest area) after applying the transformation to the specified bounds.
            </summary>
            <param name="arrangeBounds">Arrange bounds.</param>
            <returns>Largest Size possible.</returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.LayoutTransformer.IsSizeSmaller(System.Windows.Size,System.Windows.Size)">
            <summary>
            Returns true if Size a is smaller than Size b in either dimension.
            </summary>
            <param name="a">Second Size.</param>
            <param name="b">First Size.</param>
            <returns>True if Size a is smaller than Size b in either dimension.</returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.LayoutTransformer.RoundMatrix(System.Windows.Media.Matrix,System.Int32)">
            <summary>
            Rounds the non-offset elements of a Matrix to avoid issues due to floating point imprecision.
            </summary>
            <param name="matrix">Matrix to round.</param>
            <param name="decimals">Number of decimal places to round to.</param>
            <returns>Rounded Matrix.</returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.LayoutTransformer.RectTransform(System.Windows.Rect,System.Windows.Media.Matrix)">
            <summary>
            Implements WPF's Rect.Transform on Silverlight.
            </summary>
            <param name="rect">Rect to transform.</param>
            <param name="matrix">Matrix to transform with.</param>
            <returns>Bounding box of transformed Rect.</returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.LayoutTransformer.MatrixMultiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
            <summary>
            Implements WPF's Matrix.Multiply on Silverlight.
            </summary>
            <param name="matrix1">First matrix.</param>
            <param name="matrix2">Second matrix.</param>
            <returns>Multiplication result.</returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.LayoutTransformer.MatrixHasInverse(System.Windows.Media.Matrix)">
            <summary>
            Implements WPF's Matrix.HasInverse on Silverlight.
            </summary>
            <param name="matrix">Matrix to check for inverse.</param>
            <returns>True if the Matrix has an inverse.</returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.LayoutTransformer.DiagnosticWriteLine(System.String)">
            <summary>
            Outputs diagnostic info if DIAGNOSTICWRITELINE is defined.
            </summary>
            <param name="message">Diagnostic message.</param>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.LayoutTransformer.LayoutTransform">
            <summary>
            Gets or sets the layout transform.
            </summary>
            <value>The layout transform.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.LayoutTransformer.Child">
            <summary>
            Gets the child element being transformed.
            </summary>
        </member>
        <member name="T:VIBlend.Silverlight.Controls.EdgeBehaviorEnum">
            <summary>
            Represents the EdgeBehaviorEnum enumeration.
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.EdgeBehaviorEnum.EaseIn">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.EdgeBehaviorEnum.EaseOut">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.EdgeBehaviorEnum.EaseInOut">
            <exclude/>
        </member>
        <member name="T:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter">
            <exclude/>   
        </member>
        <member name="T:VIBlend.Silverlight.Controls.IAnimatedPanelScrollInfo">
            <exclude/>   
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IAnimatedPanelScrollInfo.LineDown">
            <summary>Scrolls down within the content by one logical unit.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IAnimatedPanelScrollInfo.LineLeft">
            <summary>Scrolls left within the content by one logical unit.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IAnimatedPanelScrollInfo.LineRight">
            <summary>Scrolls right within the content by one logical unit.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IAnimatedPanelScrollInfo.LineUp">
            <summary>Scrolls up within the content by one logical unit.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IAnimatedPanelScrollInfo.MakeVisible(System.Windows.UIElement,System.Windows.Rect)">
            <summary>Forces content to scroll until the coordinate space of a visual object is visible.</summary>
            <returns>A <see cref="T:System.Windows.Rect" /> that is visible.</returns>
            <param name="visual">A <see cref="T:System.Windows.UIElement" /> that becomes visible.</param>
            <param name="rectangle">A bounding rectangle that identifies the coordinate space to make visible.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IAnimatedPanelScrollInfo.MouseWheelDown">
            <summary>Scrolls down within the content after the user clicks the wheel button on a mouse.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IAnimatedPanelScrollInfo.MouseWheelLeft">
            <summary>Scrolls left within the content after the user clicks the wheel button on a mouse.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IAnimatedPanelScrollInfo.MouseWheelRight">
            <summary>Scrolls right within the content after the user clicks the wheel button on a mouse.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IAnimatedPanelScrollInfo.MouseWheelUp">
            <summary>Scrolls up within the content after the user clicks the wheel button on a mouse.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IAnimatedPanelScrollInfo.PageDown">
            <summary>Scrolls down within the content by one page.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IAnimatedPanelScrollInfo.PageLeft">
            <summary>Scrolls left within the content by one page.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IAnimatedPanelScrollInfo.PageRight">
            <summary>Scrolls right within the content by one page.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IAnimatedPanelScrollInfo.PageUp">
            <summary>Scrolls up within the content by one page.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IAnimatedPanelScrollInfo.SetHorizontalOffset(System.Double)">
            <summary>Sets the amount of horizontal offset.</summary>
            <param name="offset">The amount that content is horizontally offset from the containing viewport.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IAnimatedPanelScrollInfo.SetVerticalOffset(System.Double)">
            <summary>Sets the amount of vertical offset.</summary>
            <param name="offset">The amount that content is vertically offset from the containing viewport.</param>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.IAnimatedPanelScrollInfo.CanHorizontallyScroll">
            <summary>Gets or sets a value that indicates whether scrolling on the horizontal axis is possible.</summary>
            <returns>true if scrolling is possible; otherwise false. This property has no default value.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.IAnimatedPanelScrollInfo.CanVerticallyScroll">
            <summary>Gets or sets a value that indicates whether scrolling on the vertical axis is possible.</summary>
            <returns>true if scrolling is possible; otherwise false. This property has no default value.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.IAnimatedPanelScrollInfo.ExtentHeight">
            <summary>Gets the vertical size of the extent.</summary>
            <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the vertical size of the extent. This property has no default value.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.IAnimatedPanelScrollInfo.ExtentWidth">
            <summary>Gets the horizontal size of the extent.</summary>
            <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the horizontal size of the extent. This property has no default value.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.IAnimatedPanelScrollInfo.HorizontalOffset">
            <summary>Gets the horizontal offset of the scrolled content.</summary>
            <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the horizontal offset. Valid values are between zero and the <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentWidth" /> minus the <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportWidth" />. This property has no default value.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.IAnimatedPanelScrollInfo.ScrollOwner">
            <summary>Gets or sets a <see cref="T:System.Windows.Controls.ScrollViewer" /> element that controls scrolling behavior.</summary>
            <returns>A <see cref="T:System.Windows.Controls.ScrollViewer" /> element that controls scrolling behavior. This property has no default value.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.IAnimatedPanelScrollInfo.VerticalOffset">
            <summary>Gets the vertical offset of the scrolled content.</summary>
            <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the vertical offset of the scrolled content. Valid values are between zero and the <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentHeight" /> minus the <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportHeight" />. This property has no default value.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.IAnimatedPanelScrollInfo.ViewportHeight">
            <summary>Gets the vertical size of the viewport for this content.</summary>
            <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the vertical size of the viewport for this content. This property has no default value.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.IAnimatedPanelScrollInfo.ViewportWidth">
            <summary>Gets the horizontal size of the viewport for this content.</summary>
            <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the horizontal size of the viewport for this content. This property has no default value.</returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter"/> class.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the override.
            </summary>
            <param name="arrangeSize">Size of the arrange.</param>
            <returns></returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.HookupScrollingComponents">
            <summary>
            Hookups the scrolling components.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.HookupScrollingComponents(VIBlend.Silverlight.Controls.vScrollViewer)">
            <summary>
            Hookups the scrolling components.
            </summary>
            <param name="templatedParent">The templated parent.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.LineDown">
            <summary>Scrolls the <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> content downward by one line.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.LineLeft">
            <summary>Scrolls the <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> content to the left by a predetermined amount.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.LineRight">
            <summary>Scrolls the <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> content to the right by a predetermined amount.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.LineUp">
            <summary>Scrolls the <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> content upward by one line.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.MakeVisible(System.Windows.UIElement,System.Windows.Rect)">
            <summary>Forces content to scroll until the coordinate space of a visual object is visible.</summary>
            <returns>A <see cref="T:System.Windows.Rect" /> that represents the visible region. </returns>
            <param name="visual">A <see cref="T:System.Windows.UIElement" /> that becomes visible.</param>
            <param name="rectangle">The bounding rectangle that identifies the coordinate space to make visible.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the override.
            </summary>
            <param name="constraint">The constraint.</param>
            <returns></returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.MouseWheelDown">
            <summary>Scrolls down within content after a user clicks the wheel button on a mouse.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.MouseWheelLeft">
            <summary>Scrolls left within content after a user clicks the wheel button on a mouse.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.MouseWheelRight">
            <summary>Scrolls right within content after a user clicks the wheel button on a mouse.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.MouseWheelUp">
            <summary>Scrolls up within content after a user clicks the wheel button on a mouse.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.OnApplyTemplate">
            <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> when a new template is applied.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.PageDown">
            <summary>Scrolls down within the content by one page.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.PageLeft">
            <summary>Scrolls left within the content by one page.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.PageRight">
            <summary>Scrolls right within the content by one page.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.PageUp">
            <summary>Scrolls up within the content by one page.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.SetHorizontalOffset(System.Double)">
            <summary>Sets the distance the content has been scrolled horizontally.</summary>
            <param name="offset">The distance the content has been scrolled horizontally.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.SetVerticalOffset(System.Double)">
            <summary>Sets the distance the content has been scrolled vertically.</summary>
            <param name="offset">The distance the content has been scrolled vertically.</param>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.IsHovered">
            <summary>
            Gets or sets a value indicating whether this instance is hovered.
            </summary>
            <value>
            	<c>true</c> if this instance is hovered; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.CanHorizontallyScroll">
            <summary>Gets or sets a value that indicates whether scrolling on the horizontal axis is possible.</summary>
            <returns>true if scrolling is possible; otherwise, false.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.CanVerticallyScroll">
            <summary>Gets or sets a value that indicates whether scrolling on the vertical axis is possible.</summary>
            <returns>true if scrolling is possible; otherwise, false.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.ExtentHeight">
            <summary>Gets the vertical size of the extent.</summary>
            <returns>The vertical size of the extent.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.ExtentWidth">
            <summary>Gets the horizontal size of the extent.</summary>
            <returns>The horizontal size of the extent.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.HorizontalOffset">
            <summary>Gets or sets the distance the content has been scrolled horizontally.</summary>
            <returns>The distance the content has been scrolled horizontally.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.ScrollOwner">
            <summary>Gets or sets the <see cref="T:System.Windows.Controls.ScrollViewer" /> element that controls scrolling behavior.</summary>
            <returns>The <see cref="T:System.Windows.Controls.ScrollViewer" /> element that controls scrolling behavior.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.VerticalOffset">
            <summary>Gets or sets the distance the content has been scrolled vertically.</summary>
            <returns>The distance the content has been scrolled vertically.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.ViewportHeight">
            <summary>Gets the vertical size of the viewport.</summary>
            <returns>The vertical size of the viewport.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewerContentPresenter.ViewportWidth">
            <summary>Gets the horizontal size of the viewport.</summary>
            <returns>The horizontal size of the viewport.</returns>
        </member>
        <member name="T:VIBlend.Silverlight.Utilities.VisualStates">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.GroupCommon">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateNormal">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateMouseOver">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StatePressed">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateDisabled">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.GroupFocus">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateUnfocused">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateFocused">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.GroupSelection">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateSelected">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateUnselected">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateSelectedInactive">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.GroupExpansion">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateExpanded">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateCollapsed">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.GroupPopup">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StatePopupOpened">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StatePopupClosed">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.GroupExpandDirection">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateExpandDown">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateExpandUp">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateExpandLeft">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateExpandRight">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.GroupHasItems">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateHasItems">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateNoItems">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.GroupIncrease">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateIncreaseEnabled">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateIncreaseDisabled">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.GroupDecrease">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateDecreaseEnabled">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateDecreaseDisabled">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.GroupInteractionMode">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateEdit">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateDisplay">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.GroupLocked">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateLocked">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateUnlocked">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateActive">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateInactive">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.GroupActive">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateUnwatermarked">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateWatermarked">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.GroupWatermark">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateCalendarButtonUnfocused">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.StateCalendarButtonFocused">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.VisualStates.GroupCalendarButtonFocus">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.VisualStates.GoToState(System.Windows.Controls.Control,System.Boolean,System.String[])">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.VisualStates.GetImplementationRoot(System.Windows.DependencyObject)">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.VisualStates.TryGetVisualStateGroup(System.Windows.DependencyObject,System.String)">
            <exclude/>
        </member>
        <member name="T:VIBlend.Silverlight.Controls.ScrollViewerAnimationMode">
            <summary>
            Enumeration of the scroll animation modes.
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollViewerAnimationMode.NO_ANIMATION">
            <summary>
            No animation
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollViewerAnimationMode.DEFAULT">
            <summary>
            Default Animation
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollViewerAnimationMode.SMOOTH_SCROLL">
            <summary>
            Smooth Scroll Animation
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.WrapPanel._ignorePropertyChange">
            <summary>
            A value indicating whether a dependency property change handler
            should ignore the next change notification.  This is used to reset
            the value of properties without performing any of the actions in
            their change handlers.
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.WrapPanel.ItemHeightProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.WrapPanel.ItemHeight" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.WrapPanel.ItemHeight" />
            dependency property
            </value>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.WrapPanel.ItemWidthProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.WrapPanel.ItemWidth" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.WrapPanel.ItemWidth" />
            dependency property.
            </value>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.WrapPanel.OrientationProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.WrapPanel.Orientation" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.WrapPanel.Orientation" />
            dependency property.
            </value>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.WrapPanel.OnOrientationPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            OrientationProperty property changed handler.
            </summary>
            <param name="d">WrapPanel that changed its Orientation.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.WrapPanel.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.WrapPanel" /> class.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.WrapPanel.OnItemHeightOrWidthPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Property changed handler for ItemHeight and ItemWidth.
            </summary>
            <param name="d">
            WrapPanel that changed its ItemHeight or ItemWidth.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.WrapPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the child elements of a
            <see cref="T:System.Windows.Controls.WrapPanel" /> in anticipation
            of arranging them during the
            <see cref="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)" />
            pass.
            </summary>
            <param name="constraint">
            The size available to child elements of the wrap panel.
            </param>
            <returns>
            The size required by the
            <see cref="T:System.Windows.Controls.WrapPanel" /> and its 
            elements.
            </returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges and sizes the
            <see cref="T:System.Windows.Controls.WrapPanel" /> control and its
            child elements.
            </summary>
            <param name="finalSize">
            The area within the parent that the
            <see cref="T:System.Windows.Controls.WrapPanel" /> should use 
            arrange itself and its children.
            </param>
            <returns>
            The actual size used by the
            <see cref="T:System.Windows.Controls.WrapPanel" />.
            </returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.WrapPanel.ArrangeLine(System.Int32,System.Int32,System.Nullable{System.Double},System.Double,System.Double)">
            <summary>
            Arrange a sequence of elements in a single line.
            </summary>
            <param name="lineStart">
            Index of the first element in the sequence to arrange.
            </param>
            <param name="lineEnd">
            Index of the last element in the sequence to arrange.
            </param>
            <param name="directDelta">
            Optional fixed growth in the primary direction.
            </param>
            <param name="indirectOffset">
            Offset of the line in the indirect direction.
            </param>
            <param name="indirectGrowth">
            Shared indirect growth of the elements on this line.
            </param>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.WrapPanel.ItemHeight">
            <summary>
            Gets or sets the height of the layout area for each item that is
            contained in a <see cref="T:System.Windows.Controls.WrapPanel" />.
            </summary>
            <value>
            The height applied to the layout area of each item that is contained
            within a <see cref="T:System.Windows.Controls.WrapPanel" />.  The
            default value is <see cref="F:System.Double.NaN" />.
            </value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.WrapPanel.ItemWidth">
            <summary>
            Gets or sets the width of the layout area for each item that is
            contained in a <see cref="T:System.Windows.Controls.WrapPanel" />.
            </summary>
            <value>
            The width that applies to the layout area of each item that is
            contained in a <see cref="T:System.Windows.Controls.WrapPanel" />.
            The default value is <see cref="F:System.Double.NaN" />.
            </value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.WrapPanel.Orientation">
            <summary>
            Gets or sets the direction in which child elements are arranged.
            </summary>
            <value>
            One of the <see cref="T:System.Windows.Controls.Orientation" />
            values.  The default is
            <see cref="F:System.Windows.Controls.Orientation.Horizontal" />.
            </value>
        </member>
        <member name="T:VIBlend.Silverlight.Utilities.ElementUtilities">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.ElementUtilities.FindPanel(System.Windows.FrameworkElement)">
            <summary>
            Finds a panel.
            </summary>
            <param name="root">The root.</param>
            <returns></returns>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.ElementUtilities.HasFocus(System.Windows.FrameworkElement)">
            <summary>
            Determines whether the specified UI element has focus.
            </summary>
            <param name="uiElement">The UI element.</param>
            <returns>
              <c>true</c> if the specified UI element has focus; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:VIBlend.Silverlight.Utilities.HierarchicalDataTemplate">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.HierarchicalDataTemplate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VIBlend.Silverlight.Utilities.HierarchicalDataTemplate"/> class.
            </summary>
        </member>
        <member name="P:VIBlend.Silverlight.Utilities.HierarchicalDataTemplate.ItemsSource">
            <summary>
            Gets or sets the items source.
            </summary>
            <value>The items source.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Utilities.HierarchicalDataTemplate.ItemTemplate">
            <summary>
            Gets or sets the item template.
            </summary>
            <value>The item template.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Utilities.HierarchicalDataTemplate.ItemContainerStyle">
            <summary>
            Gets or sets the item container style.
            </summary>
            <value>The item container style.</value>
        </member>
        <member name="T:VIBlend.Silverlight.Controls.Window">
            <summary>
            Represents a window control.
            </summary>
        </member>
        <member name="T:VIBlend.Silverlight.Utilities.HeaderedContentControl">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.Window.CloseButtonVisibilityProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.Window.MinimizeButtonVisibilityProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.Window.MaximizeButtonVisibilityProperty">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.Window.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VIBlend.Silverlight.Controls.Window"/> class.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.Window.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <returns>
            The actual size that is used after the element is arranged in layout.
            </returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.Window.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.Window.OnApplyTemplate">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.Window.OnGotFocus(System.Windows.RoutedEventArgs)">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.Window.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.Window.OnLostFocus(System.Windows.RoutedEventArgs)">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.Window.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.Window.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.Window.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.Window.Show">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.Window.Hide">
            <exclude/>
        </member>
        <member name="E:VIBlend.Silverlight.Controls.Window.Close">
            <summary>
            Occurs after the window closes
            </summary>
        </member>
        <member name="E:VIBlend.Silverlight.Controls.Window.Open">
            <summary>
            Occurs before the window opens
            </summary>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.Window.CloseButtonVisibility">
            <summary>
            Gets or sets the close button visibility.
            </summary>
            <value>The close button visibility.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.Window.MinimizeButtonVisibility">
            <summary>
            Gets or sets the minimize button visibility.
            </summary>
            <value>The minimize button visibility.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.Window.MaximizeButtonVisibility">
            <summary>
            Gets or sets the maximize button visibility.
            </summary>
            <value>The maximize button visibility.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.Window.AllowResize">
            <summary>
            Gets or sets a value indicating whether [allow resize].
            </summary>
            <value><c>true</c> if [allow resize]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.Window.WindowState">
            <summary>
            Gets or sets the state of the window.
            </summary>
            <value>The state of the window.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.Window.MinSize">
            <summary>
            Gets or sets the size of the min.
            </summary>
            <value>The size of the min.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.Window.MaxSize">
            <summary>
            Gets or sets the size of the max.
            </summary>
            <value>The size of the max.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.Window.WindowStartupLocation">
            <summary>
            Gets or sets the window startup location.
            </summary>
            <value>The window startup location.</value>
        </member>
        <member name="T:VIBlend.Silverlight.Controls.PanelContentPresenter">
            <exclude/>   
        </member>
        <member name="T:VIBlend.Silverlight.Controls.IPanelScrollInfo">
            <exclude/>   
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IPanelScrollInfo.LineDown">
            <summary>Scrolls down within the content by one logical unit.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IPanelScrollInfo.LineLeft">
            <summary>Scrolls left within the content by one logical unit.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IPanelScrollInfo.LineRight">
            <summary>Scrolls right within the content by one logical unit.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IPanelScrollInfo.LineUp">
            <summary>Scrolls up within the content by one logical unit.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IPanelScrollInfo.MakeVisible(System.Windows.UIElement,System.Windows.Rect)">
            <summary>Forces content to scroll until the coordinate space of a visual object is visible.</summary>
            <returns>A <see cref="T:System.Windows.Rect" /> that is visible.</returns>
            <param name="visual">A <see cref="T:System.Windows.UIElement" /> that becomes visible.</param>
            <param name="rectangle">A bounding rectangle that identifies the coordinate space to make visible.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IPanelScrollInfo.MouseWheelDown">
            <summary>Scrolls down within the content after the user clicks the wheel button on a mouse.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IPanelScrollInfo.MouseWheelLeft">
            <summary>Scrolls left within the content after the user clicks the wheel button on a mouse.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IPanelScrollInfo.MouseWheelRight">
            <summary>Scrolls right within the content after the user clicks the wheel button on a mouse.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IPanelScrollInfo.MouseWheelUp">
            <summary>Scrolls up within the content after the user clicks the wheel button on a mouse.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IPanelScrollInfo.PageDown">
            <summary>Scrolls down within the content by one page.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IPanelScrollInfo.PageLeft">
            <summary>Scrolls left within the content by one page.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IPanelScrollInfo.PageRight">
            <summary>Scrolls right within the content by one page.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IPanelScrollInfo.PageUp">
            <summary>Scrolls up within the content by one page.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IPanelScrollInfo.SetHorizontalOffset(System.Double)">
            <summary>Sets the amount of horizontal offset.</summary>
            <param name="offset">The amount that content is horizontally offset from the containing viewport.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.IPanelScrollInfo.SetVerticalOffset(System.Double)">
            <summary>Sets the amount of vertical offset.</summary>
            <param name="offset">The amount that content is vertically offset from the containing viewport.</param>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.IPanelScrollInfo.CanHorizontallyScroll">
            <summary>Gets or sets a value that indicates whether scrolling on the horizontal axis is possible.</summary>
            <returns>true if scrolling is possible; otherwise false. This property has no default value.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.IPanelScrollInfo.CanVerticallyScroll">
            <summary>Gets or sets a value that indicates whether scrolling on the vertical axis is possible.</summary>
            <returns>true if scrolling is possible; otherwise false. This property has no default value.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.IPanelScrollInfo.ExtentHeight">
            <summary>Gets the vertical size of the extent.</summary>
            <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the vertical size of the extent. This property has no default value.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.IPanelScrollInfo.ExtentWidth">
            <summary>Gets the horizontal size of the extent.</summary>
            <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the horizontal size of the extent. This property has no default value.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.IPanelScrollInfo.HorizontalOffset">
            <summary>Gets the horizontal offset of the scrolled content.</summary>
            <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the horizontal offset. Valid values are between zero and the <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentWidth" /> minus the <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportWidth" />. This property has no default value.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.IPanelScrollInfo.ScrollOwner">
            <summary>Gets or sets a <see cref="T:System.Windows.Controls.ScrollViewer" /> element that controls scrolling behavior.</summary>
            <returns>A <see cref="T:System.Windows.Controls.ScrollViewer" /> element that controls scrolling behavior. This property has no default value.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.IPanelScrollInfo.VerticalOffset">
            <summary>Gets the vertical offset of the scrolled content.</summary>
            <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the vertical offset of the scrolled content. Valid values are between zero and the <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentHeight" /> minus the <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportHeight" />. This property has no default value.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.IPanelScrollInfo.ViewportHeight">
            <summary>Gets the vertical size of the viewport for this content.</summary>
            <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the vertical size of the viewport for this content. This property has no default value.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.IPanelScrollInfo.ViewportWidth">
            <summary>Gets the horizontal size of the viewport for this content.</summary>
            <returns>A <see cref="T:System.Double" /> that represents, in device independent pixels, the horizontal size of the viewport for this content. This property has no default value.</returns>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.PanelContentPresenter.IntervalProperty">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.PanelContentPresenter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VIBlend.Silverlight.Controls.PanelContentPresenter"/> class.
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.PanelContentPresenter.AccelerationMaxStepProperty">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.PanelContentPresenter.LineDown">
            <summary>Scrolls the <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> content downward by one line.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.PanelContentPresenter.LineLeft">
            <summary>Scrolls the <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> content to the left by a predetermined amount.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.PanelContentPresenter.LineRight">
            <summary>Scrolls the <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> content to the right by a predetermined amount.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.PanelContentPresenter.LineUp">
            <summary>Scrolls the <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> content upward by one line.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.PanelContentPresenter.MakeVisible(System.Windows.UIElement,System.Windows.Rect)">
            <summary>Forces content to scroll until the coordinate space of a visual object is visible.</summary>
            <returns>A <see cref="T:System.Windows.Rect" /> that represents the visible region. </returns>
            <param name="visual">A <see cref="T:System.Windows.UIElement" /> that becomes visible.</param>
            <param name="rectangle">The bounding rectangle that identifies the coordinate space to make visible.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.PanelContentPresenter.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the override.
            </summary>
            <param name="constraint">The constraint.</param>
            <returns></returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.PanelContentPresenter.MouseWheelDown">
            <summary>Scrolls down within content after a user clicks the wheel button on a mouse.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.PanelContentPresenter.MouseWheelLeft">
            <summary>Scrolls left within content after a user clicks the wheel button on a mouse.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.PanelContentPresenter.MouseWheelRight">
            <summary>Scrolls right within content after a user clicks the wheel button on a mouse.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.PanelContentPresenter.MouseWheelUp">
            <summary>Scrolls up within content after a user clicks the wheel button on a mouse.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.PanelContentPresenter.OnApplyTemplate">
            <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> when a new template is applied.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.PanelContentPresenter.PageDown">
            <summary>Scrolls down within the content by one page.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.PanelContentPresenter.PageLeft">
            <summary>Scrolls left within the content by one page.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.PanelContentPresenter.PageRight">
            <summary>Scrolls right within the content by one page.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.PanelContentPresenter.PageUp">
            <summary>Scrolls up within the content by one page.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.PanelContentPresenter.SetHorizontalOffset(System.Double)">
            <summary>Sets the distance the content has been scrolled horizontally.</summary>
            <param name="offset">The distance the content has been scrolled horizontally.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.PanelContentPresenter.SetVerticalOffset(System.Double)">
            <summary>Sets the distance the content has been scrolled vertically.</summary>
            <param name="offset">The distance the content has been scrolled vertically.</param>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.PanelContentPresenter.Interval">
            <summary>
            Gets or sets the interval.
            </summary>
            <value>The interval.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.PanelContentPresenter.LineSmallStep">
            <summary>
            Gets or sets the line small step.
            </summary>
            <value>The line small step.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.PanelContentPresenter.AccelerationMaxStep">
            <summary>
            Gets or sets the acceleration max step.
            </summary>
            <value>The acceleration max step.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.PanelContentPresenter.IsHovered">
            <summary>
            Gets or sets a value indicating whether this instance is hovered.
            </summary>
            <value>
            	<c>true</c> if this instance is hovered; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.PanelContentPresenter.ScrollType">
            <summary>
            Gets or sets the type of the scroll.
            </summary>
            <value>The type of the scroll.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.PanelContentPresenter.CanHorizontallyScroll">
            <summary>Gets or sets a value that indicates whether scrolling on the horizontal axis is possible.</summary>
            <returns>true if scrolling is possible; otherwise, false.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.PanelContentPresenter.CanVerticallyScroll">
            <summary>Gets or sets a value that indicates whether scrolling on the vertical axis is possible.</summary>
            <returns>true if scrolling is possible; otherwise, false.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.PanelContentPresenter.ExtentHeight">
            <summary>Gets the vertical size of the extent.</summary>
            <returns>The vertical size of the extent.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.PanelContentPresenter.ExtentWidth">
            <summary>Gets the horizontal size of the extent.</summary>
            <returns>The horizontal size of the extent.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.PanelContentPresenter.HorizontalOffset">
            <summary>Gets or sets the distance the content has been scrolled horizontally.</summary>
            <returns>The distance the content has been scrolled horizontally.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.PanelContentPresenter.ScrollOwner">
            <summary>Gets or sets the <see cref="T:System.Windows.Controls.ScrollViewer" /> element that controls scrolling behavior.</summary>
            <returns>The <see cref="T:System.Windows.Controls.ScrollViewer" /> element that controls scrolling behavior.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.PanelContentPresenter.VerticalOffset">
            <summary>Gets or sets the distance the content has been scrolled vertically.</summary>
            <returns>The distance the content has been scrolled vertically.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.PanelContentPresenter.ViewportHeight">
            <summary>Gets the vertical size of the viewport.</summary>
            <returns>The vertical size of the viewport.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.PanelContentPresenter.ViewportWidth">
            <summary>Gets the horizontal size of the viewport.</summary>
            <returns>The horizontal size of the viewport.</returns>
        </member>
        <member name="T:VIBlend.Silverlight.Controls.WindowState">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.WindowState.Normal">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.WindowState.Maximized">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.WindowState.Minimized">
            <exclude/>
        </member>
        <member name="T:VIBlend.Silverlight.Controls.ScrollButton">
            <exclude/>   
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollButton.ScrollTypeProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollButton.DelayProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollButton.IntervalProperty">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VIBlend.Silverlight.Controls.ScrollButton"/> class.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollButton.UpdateVisualState(System.Boolean)">
            <summary>
            Updates the state of the visual.
            </summary>
            <param name="useTransitions">if set to <c>true</c> [use transitions].</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollButton.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollButton.OnClick">
            <summary>
            Raises the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click"/> event.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollButton.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown"/> event that occurs when the user presses a key while this control has focus.
            </summary>
            <param name="e">The event data.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="e"/> is null.</exception>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollButton.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides class handling for the <see cref="E:System.Windows.UIElement.KeyUp"/> routed event that occurs when the user releases a key while this control has focus.
            </summary>
            <param name="e">The event data.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="e"/> is null.</exception>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollButton.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the <see cref="E:System.Windows.UIElement.LostFocus"/> event.
            </summary>
            <param name="e">The event data for the <see cref="E:System.Windows.UIElement.LostFocus"/> event.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="e"/> is null.</exception>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollButton.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides class handling for the <see cref="E:System.Windows.UIElement.MouseEnter"/> event that occurs when the mouse enters this control.
            </summary>
            <param name="e">The event data.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="e"/> is null.</exception>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollButton.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeave"/> routed event that occurs when the mouse leaves an element.
            </summary>
            <param name="e">The event data for the <see cref="E:System.Windows.UIElement.MouseLeave"/> event.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="e"/> is null.</exception>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollButton.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> event that occurs when the left mouse button is pressed while the mouse pointer is over this control.
            </summary>
            <param name="e">The event data.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="e"/> is null.</exception>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollButton.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> event that occurs when the left mouse button is released while the mouse pointer is over this control.
            </summary>
            <param name="e">The event data.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="e"/> is null.</exception>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollButton.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides class handling for the <see cref="E:System.Windows.UIElement.MouseMove"/> event that occurs when the mouse pointer moves while over this element.
            </summary>
            <param name="e">The event data.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="e"/> is null.</exception>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollButton.ScrollType">
            <summary>
            Gets or sets the type of the scroll.
            </summary>
            <value>The type of the scroll.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollButton.Delay">
            <summary>
            Gets or sets the delay.
            </summary>
            <value>The delay.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollButton.Interval">
            <summary>
            Gets or sets the interval.
            </summary>
            <value>The interval.</value>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.ExpandableContentControl.RevealModeProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.ExpandableContentControl.PercentageProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.ExpandableContentControl.TargetSizeProperty">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.ExpandableContentControl.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <returns>
            The actual size that is used after the element is arranged in layout.
            </returns>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.ExpandableContentControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VIBlend.Silverlight.Utilities.ExpandableContentControl"/> class.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.ExpandableContentControl.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="E:VIBlend.Silverlight.Utilities.ExpandableContentControl.PercentagePropertyChanged">
            <exclude/>
        </member>
        <member name="P:VIBlend.Silverlight.Utilities.ExpandableContentControl.RevealMode">
            <exclude/>
        </member>
        <member name="P:VIBlend.Silverlight.Utilities.ExpandableContentControl.Percentage">
            <exclude/>
        </member>
        <member name="P:VIBlend.Silverlight.Utilities.ExpandableContentControl.TargetSize">
            <exclude/>
        </member>
        <member name="P:VIBlend.Silverlight.Utilities.ExpandableContentControl.RelevantContentSize">
            <summary>
            Gets the size of the relevant content.
            </summary>
            <value>The size of the relevant content.</value>
        </member>
        <member name="T:VIBlend.Silverlight.Controls.WindowStartupLocation">
            <exclude/>
        </member>
        <member name="T:VIBlend.Silverlight.Controls.DragFeedbackEventArgs">
            <summary>
            Represents the DragFeedbackEventArgs class.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.DragFeedbackEventArgs.#ctor(System.Object,System.Double,System.Double,System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.Windows.Input.MouseEventArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:VIBlend.Silverlight.Controls.DragFeedbackEventArgs"/> class.
            </summary>
            <param name="data">The data.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.DragFeedbackEventArgs.MouseEventArgs">
            <summary>
            Gets or sets the mouse event args.
            </summary>
            <value>The mouse event args.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.DragFeedbackEventArgs.FeedbackContent">
            <summary>
            Gets or sets the content of the feedback.
            </summary>
            <value>The content of the feedback.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.DragFeedbackEventArgs.SourceElement">
            <summary>
            Gets the source element.
            </summary>
            <value>The source element.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.DragFeedbackEventArgs.TargetElement">
            <summary>
            Gets the target element.
            </summary>
            <value>The target element.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.DragFeedbackEventArgs.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.DragFeedbackEventArgs.X">
            <summary>
            Gets the X.
            </summary>
            <value>The X.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.DragFeedbackEventArgs.Y">
            <summary>
            Gets the Y.
            </summary>
            <value>The Y.</value>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.LengthConverter.UnitToPixelConversions">
            <summary>
            Conversions from units to pixels.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.LengthConverter.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.LengthConverter" /> class.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.LengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether conversion is possible from a specified type to a
            <see cref="T:System.Double" /> that represents an object
            measurement.
            </summary>
            <param name="typeDescriptorContext">
            An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />
            that provides a format context.
            </param>
            <param name="sourceType">
            A <see cref="T:System.Type" /> that represents the type you want to
            convert from.
            </param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.LengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to values of the
            <see cref="T:System.Double" /> type.
            </summary>
            <param name="typeDescriptorContext">
            An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />
            that provides a format context.
            </param>
            <param name="cultureInfo">
            The <see cref="T:System.Globalization.CultureInfo" /> to use as the
            current culture.
            </param>
            <param name="source">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.LengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert a measurement to the
            specified type.
            </summary>
            <param name="typeDescriptorContext">
            An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />
            that provides a format context.
            </param>
            <param name="destinationType">
            A <see cref="T:System.Type" /> that represents the type you want to
            convert to.
            </param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.LengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified measurement to the specified type.
            </summary>
            <param name="typeDescriptorContext">
            An object that provides a format context.
            </param>
            <param name="cultureInfo">
            The <see cref="T:System.Globalization.CultureInfo" /> to use as the
            current culture.
            </param>
            <param name="value">The value to convert.</param>
            <param name="destinationType">
            A <see cref="T:System.Type" /> that represents the type you want to
            convert to.
            </param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.TypeConverters.CanConvertFrom``1(System.Type)">
            <summary>
            Returns a value indicating whether this converter can convert an
            object of the given type to an instance of the expected type.
            </summary>
            <typeparam name="T">Expected type of the converter.</typeparam>
            <param name="sourceType">
            The type of the source that is being evaluated for conversion.
            </param>
            <returns>
            A value indicating whether the converter can convert the provided
            type.
            </returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.TypeConverters.ConvertFrom``1(System.ComponentModel.TypeConverter,System.Object)">
            <summary>
            Attempts to convert a specified object to an instance of the
            expected type.
            </summary>
            <typeparam name="T">Expected type of the converter.</typeparam>
            <param name="converter">TypeConverter instance.</param>
            <param name="value">The object being converted.</param>
            <returns>
            The instance of the expected type created from the converted object.
            </returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.TypeConverters.CanConvertTo``1(System.Type)">
            <summary>
            Determines whether conversion is possible to a specified type.
            </summary>
            <typeparam name="T">Expected type of the converter.</typeparam>
            <param name="destinationType">
            Identifies the data type to evaluate for conversion.
            </param>
            <returns>
            A value indicating whether conversion is possible.
            </returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.TypeConverters.ConvertTo(System.ComponentModel.TypeConverter,System.Object,System.Type)">
            <summary>
            Attempts to convert a specified object to an instance of the
            desired type.
            </summary>
            <param name="converter">TypeConverter instance.</param>
            <param name="value">The object being converted.</param>
            <param name="destinationType">
            The type to convert the value to.
            </param>
            <returns>
            The value of the conversion to the specified type.
            </returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.NumericExtensions.IsZero(System.Double)">
            <summary>
            Check if a number is zero.
            </summary>
            <param name="value">The number to check.</param>
            <returns>True if the number is zero, false otherwise.</returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.NumericExtensions.IsNaN(System.Double)">
            <summary>
            Check if a number isn't really a number.
            </summary>
            <param name="value">The number to check.</param>
            <returns>
            True if the number is not a number, false if it is a number.
            </returns>
        </member>
        <member name="T:VIBlend.Silverlight.Controls.NumericExtensions.NanUnion">
            <summary>
            NanUnion is a C++ style type union used for efficiently converting
            a double into an unsigned long, whose bits can be easily
            manipulated.
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.NumericExtensions.NanUnion.FloatingValue">
            <summary>
            Floating point representation of the union.
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.NumericExtensions.NanUnion.IntegerValue">
            <summary>
            Integer representation of the union.
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.OrientedSize._orientation">
            <summary>
            The orientation of the structure.
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.OrientedSize._direct">
            <summary>
            The size dimension that grows directly with layout placement.
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.OrientedSize._indirect">
            <summary>
            The size dimension that grows indirectly with the maximum value of
            the layout row or column.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.OrientedSize.#ctor(System.Windows.Controls.Orientation)">
            <summary>
            Initializes a new OrientedSize structure.
            </summary>
            <param name="orientation">Orientation of the structure.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.OrientedSize.#ctor(System.Windows.Controls.Orientation,System.Double,System.Double)">
            <summary>
            Initializes a new OrientedSize structure.
            </summary>
            <param name="orientation">Orientation of the structure.</param>
            <param name="width">Un-oriented width of the structure.</param>
            <param name="height">Un-oriented height of the structure.</param>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.OrientedSize.Orientation">
            <summary>
            Gets the orientation of the structure.
            </summary>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.OrientedSize.Direct">
            <summary>
            Gets or sets the size dimension that grows directly with layout
            placement.
            </summary>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.OrientedSize.Indirect">
            <summary>
            Gets or sets the size dimension that grows indirectly with the
            maximum value of the layout row or column.
            </summary>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.OrientedSize.Width">
            <summary>
            Gets or sets the width of the size.
            </summary>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.OrientedSize.Height">
            <summary>
            Gets or sets the height of the size.
            </summary>
        </member>
        <member name="T:VIBlend.Silverlight.Controls.DropDownOwner">
            <exclude/>
        </member>
        <member name="T:VIBlend.Silverlight.Controls.ScrollablePanel">
            <summary>
            Represents a scrollable area that can contain other visible elements.
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollablePanel.ElementLeftHorizontalScrollBarName">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollablePanel.ElementRightHorizontalScrollBarName">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollablePanel.ElementScrollContentPresenterName">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollablePanel.ElementTopVerticalScrollBarName">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollablePanel.ElementBottomVerticalScrollBarName">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollablePanel.ExtentHeightProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollablePanel.ExtentWidthProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollablePanel.HorizontalOffsetProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollablePanel.HorizontalScrollBarVisibilityProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollablePanel.ScrollableHeightProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollablePanel.ScrollableWidthProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollablePanel.VerticalOffsetProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollablePanel.VerticalScrollBarVisibilityProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollablePanel.ViewportHeightProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollablePanel.ViewportWidthProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollablePanel.ScrollTypeProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollablePanel.DelayProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollablePanel.IntervalProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollablePanel.AccelerationMaxStepProperty">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollablePanel.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.CustomScrollViewer" /> class. </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollablePanel.InvalidateScrollInfo">
            <summary>Called when the value of properties that describe the size and location of the scroll area change. </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollablePanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the override.
            </summary>
            <param name="constraint">The constraint.</param>
            <returns></returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollablePanel.OnApplyTemplate">
            <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.CustomScrollViewer" /> control when a new template is applied.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollablePanel.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.KeyDown"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollablePanel.ScrollToHorizontalOffset(System.Double)">
            <summary>Scrolls the content that is within the <see cref="T:System.Windows.Controls.CustomScrollViewer" /> to the specified horizontal offset position.</summary>
            <param name="offset">The position that the content scrolls to.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollablePanel.ScrollToVerticalOffset(System.Double)">
            <summary>Scrolls the content that is within the <see cref="T:System.Windows.Controls.CustomScrollViewer" /> to the specified vertical offset position.</summary>
            <param name="offset">The position that the content scrolls to.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollablePanel.SetHorizontalScrollBarVisibility(System.Windows.DependencyObject,System.Windows.Controls.ScrollBarVisibility)">
            <summary>Sets the value of the <see cref="P:System.Windows.Controls.CustomScrollViewer.HorizontalScrollBarVisibility" /> dependency property to a specified element.</summary>
            <param name="element">The element on which to set the property value.</param>
            <param name="horizontalScrollBarVisibility">The property value to set.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is null.</exception>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollablePanel.SetVerticalScrollBarVisibility(System.Windows.DependencyObject,System.Windows.Controls.ScrollBarVisibility)">
            <summary>Sets the value of the <see cref="P:System.Windows.Controls.CustomScrollViewer.VerticalScrollBarVisibility" /> dependency property to a specified element.</summary>
            <param name="element">The element on which to set the property value.</param>
            <param name="verticalScrollBarVisibility">The property value to set.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is null.</exception>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollablePanel.AccelerationMaxStep">
            <summary>
            Gets or sets the acceleration max step.
            </summary>
            <value>The acceleration max step.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollablePanel.Delay">
            <summary>
            Gets or sets the delay.
            </summary>
            <value>The delay.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollablePanel.Interval">
            <summary>
            Gets or sets the interval.
            </summary>
            <value>The interval.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollablePanel.ScrollType">
            <summary>
            Gets or sets the type of the scroll.
            </summary>
            <value>The type of the scroll.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollablePanel.ComputedHorizontalScrollBarVisibility">
            <summary>Gets a value that indicates whether the horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> is visible. </summary>
            <returns>A <see cref="T:System.Windows.Visibility" /> that indicates whether the horizontal scroll bar is visible. The default value is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" />.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollablePanel.ComputedVerticalScrollBarVisibility">
            <summary>Gets a value that indicates whether the vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> is visible. </summary>
            <returns>A <see cref="T:System.Windows.Visibility" /> that indicates whether the vertical scroll bar is visible. The default value is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible" />.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollablePanel.ElementLeftHorizontalScrollBar">
            <summary>
            Gets or sets the element left horizontal scroll bar.
            </summary>
            <value>The element left horizontal scroll bar.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollablePanel.ElementRightHorizontalScrollBar">
            <summary>
            Gets or sets the element right horizontal scroll bar.
            </summary>
            <value>The element right horizontal scroll bar.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollablePanel.ElementTopVerticalScrollBar">
            <summary>
            Gets or sets the element top vertical scroll bar.
            </summary>
            <value>The element top vertical scroll bar.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollablePanel.ElementBottomVerticalScrollBar">
            <summary>
            Gets or sets the element bottom vertical scroll bar.
            </summary>
            <value>The element bottom vertical scroll bar.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollablePanel.ExtentHeight">
            <summary>Gets the vertical size of all the content for display in the <see cref="T:System.Windows.Controls.CustomScrollViewer" />.</summary>
            <returns>The vertical size of all the content for display in the <see cref="T:System.Windows.Controls.CustomScrollViewer" />.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollablePanel.ExtentWidth">
            <summary>Gets the horizontal size of all the content for display in the <see cref="T:System.Windows.Controls.CustomScrollViewer" />.</summary>
            <returns>The horizontal size of all the content for display in the <see cref="T:System.Windows.Controls.CustomScrollViewer" />.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollablePanel.HorizontalOffset">
            <summary>Gets a value that contains the horizontal offset of the scrolled content. </summary>
            <returns>The horizontal offset of the scrolled content. The default value is 0.0.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollablePanel.HorizontalScrollBarVisibility">
            <summary>Gets or sets a value that indicates whether a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> should be displayed.</summary>
            <returns>A <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> value that indicates whether a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> should be displayed. The default value is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" />.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollablePanel.ScrollableHeight">
            <summary>Gets a value that represents the vertical size of the area that can be scrolled; the difference between the width of the extent and the width of the viewport.</summary>
            <returns>The vertical size of the area that can be scrolled. This property has no default value.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollablePanel.ScrollableWidth">
            <summary>Gets a value that represents the horizontal size of the area that can be scrolled; the difference between the width of the extent and the width of the viewport.. </summary>
            <returns>The horizontal size of the area that can be scrolled. This property has no default value.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollablePanel.VerticalOffset">
            <summary>Gets a value that contains the vertical offset of the scrolled content.</summary>
            <returns>The vertical offset of the scrolled content. The default value is 0.0.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollablePanel.VerticalScrollBarVisibility">
            <summary>Gets or sets a value that indicates whether a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> should be displayed. </summary>
            <returns>A <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> value that indicates whether a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> should be displayed. The default value is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible" />.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollablePanel.ViewportHeight">
            <summary>Gets a value that contains the vertical size of the viewable content. </summary>
            <returns>The vertical size of the viewable content. This property has no default value.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollablePanel.ViewportWidth">
            <summary>Gets a value that contains the horizontal size of the viewable content.</summary>
            <returns>The horizontal size of the viewable content. The default value is 0.0.</returns>
        </member>
        <member name="T:VIBlend.Silverlight.Utilities.ExpandDirection">
            <exclude/>   
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.ExpandDirection.Down">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.ExpandDirection.Up">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.ExpandDirection.Left">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.ExpandDirection.Right">
            <exclude/>
        </member>
        <member name="T:VIBlend.Silverlight.Controls.vScrollViewer">
            <summary>
            Represents a scrollable area that can contain other visible elements.
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.vScrollViewer.PopupButtonName">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.vScrollViewer.ElementHorizontalScrollBarName">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.vScrollViewer.ElementScrollContentPresenterName">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.vScrollViewer.ElementVerticalScrollBarName">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.vScrollViewer.ComputedHorizontalScrollBarVisibilityProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.vScrollViewer.ComputedVerticalScrollBarVisibilityProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.vScrollViewer.ExtentHeightProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.vScrollViewer.ExtentWidthProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.vScrollViewer.HorizontalOffsetProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.vScrollViewer.HorizontalScrollBarVisibilityProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.vScrollViewer.ScrollableHeightProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.vScrollViewer.ScrollableWidthProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.vScrollViewer.VerticalOffsetProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.vScrollViewer.VerticalScrollBarVisibilityProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.vScrollViewer.ViewportHeightProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.vScrollViewer.ViewportWidthProperty">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewer.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.CustomScrollViewer" /> class. </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewer.GetHorizontalScrollBarVisibility(System.Windows.DependencyObject)">
            <summary>
            Gets the horizontal scroll bar visibility.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewer.GetVerticalScrollBarVisibility(System.Windows.DependencyObject)">
            <summary>
            Gets the vertical scroll bar visibility.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.vScrollViewer.ScrollAnimationTimeProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.vScrollViewer.ScrollAnimationModeProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.vScrollViewer.VerticalScrollPositionProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.vScrollViewer.HorizontalScrollPositionProperty">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewer.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseWheel"/> event occurs to provide handling for the event in a derived class without attaching a delegate.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Input.MouseWheelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewer.InvalidateScrollInfo">
            <summary>Called when the value of properties that describe the size and location of the scroll area change. </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewer.PageDown">
            <summary>
            Pages down.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewer.PageEnd">
            <summary>
            Pages the end.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewer.PageHome">
            <summary>
            Pages the home.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewer.PageLeft">
            <summary>
            Pages the left.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewer.PageRight">
            <summary>
            Pages the right.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewer.PageUp">
            <summary>
            Pages up.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewer.LineDown">
            <summary>
            Lines down.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewer.LineLeft">
            <summary>
            Lines the left.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewer.LineRight">
            <summary>
            Lines the right.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewer.LineUp">
            <summary>
            Lines up.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewer.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the override.
            </summary>
            <param name="constraint">The constraint.</param>
            <returns></returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewer.OnApplyTemplate">
            <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.CustomScrollViewer" /> control when a new template is applied.</summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.KeyDown"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewer.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewer.ScrollToHorizontalOffset(System.Double)">
            <summary>Scrolls the content that is within the <see cref="T:System.Windows.Controls.CustomScrollViewer" /> to the specified horizontal offset position.</summary>
            <param name="offset">The position that the content scrolls to.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewer.ScrollToVerticalOffset(System.Double)">
            <summary>Scrolls the content that is within the <see cref="T:System.Windows.Controls.CustomScrollViewer" /> to the specified vertical offset position.</summary>
            <param name="offset">The position that the content scrolls to.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewer.SetHorizontalScrollBarVisibility(System.Windows.DependencyObject,System.Windows.Controls.ScrollBarVisibility)">
            <summary>Sets the value of the <see cref="P:System.Windows.Controls.CustomScrollViewer.HorizontalScrollBarVisibility" /> dependency property to a specified element.</summary>
            <param name="element">The element on which to set the property value.</param>
            <param name="horizontalScrollBarVisibility">The property value to set.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is null.</exception>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.vScrollViewer.SetVerticalScrollBarVisibility(System.Windows.DependencyObject,System.Windows.Controls.ScrollBarVisibility)">
            <summary>Sets the value of the <see cref="P:System.Windows.Controls.CustomScrollViewer.VerticalScrollBarVisibility" /> dependency property to a specified element.</summary>
            <param name="element">The element on which to set the property value.</param>
            <param name="verticalScrollBarVisibility">The property value to set.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is null.</exception>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.vScrollViewer.SmallChangeProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.vScrollViewer.LargeChangeProperty">
            <exclude/>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewer.ScrollAnimationTime">
            <summary>
            Gets or sets the duration of the scroll animation.
            </summary>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewer.ScrollAnimationMode">
            <summary>
            Gets or sets the scroll animation mode.
            </summary>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewer.IsMouseWheelEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is mouse wheel enabled.
            </summary>
            <value>
            	<c>true</c> if this instance is mouse wheel enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewer.HorizontalScrollPosition">
            <summary>
            Gets or sets the horizontal scroll position
            </summary>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewer.VerticalScrollPosition">
            <summary>
            Gets or sets the vertical scroll position
            </summary>
        </member>
        <member name="E:VIBlend.Silverlight.Controls.vScrollViewer.PopupButtonClicked">
            <summary>
            Occurs when the Popup Button is clicked.
            </summary>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewer.ComputedHorizontalScrollBarVisibility">
            <summary>Gets a value that indicates whether the horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> is visible. </summary>
            <returns>A <see cref="T:System.Windows.Visibility" /> that indicates whether the horizontal scroll bar is visible. The default value is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" />.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewer.ComputedVerticalScrollBarVisibility">
            <summary>Gets a value that indicates whether the vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> is visible. </summary>
            <returns>A <see cref="T:System.Windows.Visibility" /> that indicates whether the vertical scroll bar is visible. The default value is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible" />.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewer.ElementHorizontalScrollBar">
            <summary>
            Gets or sets the element left horizontal scroll bar.
            </summary>
            <value>The element left horizontal scroll bar.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewer.ElementVerticalScrollBar">
            <summary>
            Gets or sets the element top vertical scroll bar.
            </summary>
            <value>The element top vertical scroll bar.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewer.ExtentHeight">
            <summary>Gets the vertical size of all the content for display in the <see cref="T:System.Windows.Controls.CustomScrollViewer" />.</summary>
            <returns>The vertical size of all the content for display in the <see cref="T:System.Windows.Controls.CustomScrollViewer" />.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewer.ExtentWidth">
            <summary>Gets the horizontal size of all the content for display in the <see cref="T:System.Windows.Controls.CustomScrollViewer" />.</summary>
            <returns>The horizontal size of all the content for display in the <see cref="T:System.Windows.Controls.CustomScrollViewer" />.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewer.SmallChange">
            <summary>
            Gets or sets the small change.
            </summary>
            <value>The small change.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewer.LargeChange">
            <summary>
            Gets or sets the small change.
            </summary>
            <value>The small change.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewer.HorizontalOffset">
            <summary>Gets a value that contains the horizontal offset of the scrolled content. </summary>
            <returns>The horizontal offset of the scrolled content. The default value is 0.0.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewer.HorizontalScrollBarVisibility">
            <summary>Gets or sets a value that indicates whether a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> should be displayed.</summary>
            <returns>A <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> value that indicates whether a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> should be displayed. The default value is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" />.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewer.ScrollableHeight">
            <summary>Gets a value that represents the vertical size of the area that can be scrolled; the difference between the width of the extent and the width of the viewport.</summary>
            <returns>The vertical size of the area that can be scrolled. This property has no default value.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewer.ScrollableWidth">
            <summary>Gets a value that represents the horizontal size of the area that can be scrolled; the difference between the width of the extent and the width of the viewport.. </summary>
            <returns>The horizontal size of the area that can be scrolled. This property has no default value.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewer.VerticalOffset">
            <summary>Gets a value that contains the vertical offset of the scrolled content.</summary>
            <returns>The vertical offset of the scrolled content. The default value is 0.0.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewer.VerticalScrollBarVisibility">
            <summary>Gets or sets a value that indicates whether a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> should be displayed. </summary>
            <returns>A <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> value that indicates whether a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> should be displayed. The default value is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible" />.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewer.ViewportHeight">
            <summary>Gets a value that contains the vertical size of the viewable content. </summary>
            <returns>The vertical size of the viewable content. This property has no default value.</returns>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.vScrollViewer.ViewportWidth">
            <summary>Gets a value that contains the horizontal size of the viewable content.</summary>
            <returns>The horizontal size of the viewable content. The default value is 0.0.</returns>
        </member>
        <member name="T:VIBlend.Silverlight.Controls.DropDownBase">
            <exclude/>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.DropDownBase.ZIndex">
            <summary>
            Gets or sets the index of the Z.
            </summary>
            <value>The index of the Z.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.DropDownBase.DropDownZIndex">
            <summary>
            Gets or sets the index of the drop down Z.
            </summary>
            <value>The index of the drop down Z.</value>
        </member>
        <member name="T:VIBlend.Silverlight.Controls.ScrollElement">
            <exclude/>   
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollElement.ScrollTypeProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollElement.ViewportSizeProperty">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VIBlend.Silverlight.Controls.ScrollElement"/> class.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollElement.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollElement.OnIsButtonMouseOverChanged">
            <summary>
            Called when a button's hover state is changed.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.LostMouseCapture"/> event occurs to provide handling for the event in a derived class without attaching a delegate.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollElement.OnMaximumChanged(System.Double,System.Double)">
            <summary>
            Called when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> property changes.
            </summary>
            <param name="oldMaximum">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> property.</param>
            <param name="newMaximum">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> property.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollElement.OnMinimumChanged(System.Double,System.Double)">
            <summary>
            Called when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> property changes.
            </summary>
            <param name="oldMinimum">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> property.</param>
            <param name="newMinimum">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> property.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseEnter"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeave"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.ScrollElement.OnValueChanged(System.Double,System.Double)">
            <summary>
            Raises the <see cref="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged"/> routed event.
            </summary>
            <param name="oldValue">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/> property.</param>
            <param name="newValue">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/> property.</param>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollElement.Delay">
            <summary>
            Gets or sets the delay.
            </summary>
            <value>The delay.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollElement.Interval">
            <summary>
            Gets or sets the interval.
            </summary>
            <value>The interval.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollElement.ScrollType">
            <summary>
            Gets or sets the type of the scroll.
            </summary>
            <value>The type of the scroll.</value>
        </member>
        <member name="E:VIBlend.Silverlight.Controls.ScrollElement.Scroll">
            <summary>
            Occurs when a user presses a scroll button.
            </summary>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollElement.IsButtonMouseOver">
            <summary>
            Gets or sets a value indicating whether this instance is button mouse over.
            </summary>
            <value>
            	<c>true</c> if this instance is button mouse over; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollElement.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
            <value>The orientation.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.ScrollElement.ViewportSize">
            <summary>
            Gets or sets the size of the viewport.
            </summary>
            <value>The size of the viewport.</value>
        </member>
        <member name="T:VIBlend.Silverlight.Controls.ScrollType">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollType.Click">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScrollType.Hover">
            <exclude/>
        </member>
        <member name="T:VIBlend.Silverlight.Utilities.AnimatedContentControl">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.AnimatedContentControl.IsAnimatingProperty">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.AnimatedContentControl.TransitionProperty">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.AnimatedContentControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VIBlend.Silverlight.Utilities.AnimatedContentControl"/> class.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.AnimatedContentControl.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.AnimatedContentControl.OnContentChanged(System.Object,System.Object)">
            <summary>
            Called when the value of the <see cref="P:System.Windows.Controls.ContentControl.Content"/> property changes.
            </summary>
            <param name="oldContent">The old value of the <see cref="P:System.Windows.Controls.ContentControl.Content"/> property.</param>
            <param name="newContent">The new value of the <see cref="P:System.Windows.Controls.ContentControl.Content"/> property.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.AnimatedContentControl.CallContentChanged(System.Object,System.Object)">
            <summary>
            Calls the content changed.
            </summary>
            <param name="oldContent">The old content.</param>
            <param name="newContent">The new content.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.AnimatedContentControl.GoToNormalState">
            <summary>
            Goes the state of to normal.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.AnimatedContentControl.StopAnimation">
            <summary>
            Stops the animation.
            </summary>
        </member>
        <member name="P:VIBlend.Silverlight.Utilities.AnimatedContentControl.CurrentContentPresentationSite">
            <exclude/>
        </member>
        <member name="P:VIBlend.Silverlight.Utilities.AnimatedContentControl.PreviousContentPresentationSite">
            <exclude/>
        </member>
        <member name="P:VIBlend.Silverlight.Utilities.AnimatedContentControl.IsAnimating">
            <exclude/>
        </member>
        <member name="P:VIBlend.Silverlight.Utilities.AnimatedContentControl.Transition">
            <summary>
            Gets or sets the transition.
            </summary>
            <value>The transition.</value>
        </member>
        <member name="E:VIBlend.Silverlight.Utilities.AnimatedContentControl.AnimationCompleted">
            <exclude/>
        </member>
        <member name="T:VIBlend.Silverlight.Utilities.ItemsControlHelper">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.ItemsControlHelper.#ctor(System.Windows.Controls.ItemsControl)">
            <summary>
            Initializes a new instance of the <see cref="T:VIBlend.Silverlight.Utilities.ItemsControlHelper"/> class.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.ItemsControlHelper.OnApplyTemplate">
            <exclude/>  
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.ItemsControlHelper.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Windows.Style)">
            <summary>
            Prepares the container for item override.
            </summary>
            <param name="element">The element.</param>
            <param name="parentItemContainerStyle">The parent item container style.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.ItemsControlHelper.UpdateItemContainerStyle(System.Windows.Style)">
            <summary>
            Updates the item container style.
            </summary>
            <param name="itemContainerStyle">The item container style.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.ItemsControlHelper.ScrollIntoView(System.Windows.FrameworkElement)">
            <summary>
            Scrolls the into view.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="T:VIBlend.Silverlight.Controls.DragDropManager">
            <summary>
            Represents the DragDropManager class.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.DragDropManager.GetAllowDrag(System.Windows.UIElement)">
            <summary>
            Gets whether the user can drag the element.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.DragDropManager.SetAllowDrag(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets whether the user can drag the element.
            </summary>
            <param name="element">The element.</param>
            <param name="value">if set to <c>true</c> [value].</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.DragDropManager.OnDragCanceled">
            <summary>
            Called when the drag operation is canceled.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.DragDropManager.OnItemDragStarting(VIBlend.Silverlight.Controls.DragCancelEventArgs)">
            <summary>
            Raises the <see cref="E:ItemDragStarting"/> event.
            </summary>
            <param name="args">The <see cref="T:VIBlend.Silverlight.Controls.DragCancelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.DragDropManager.OnDragOver(VIBlend.Silverlight.Controls.DragEventArgs)">
            <summary>
            Raises the <see cref="E:DragOver"/> event.
            </summary>
            <param name="args">The <see cref="T:VIBlend.Silverlight.Controls.DragEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.DragDropManager.OnDragDrop(VIBlend.Silverlight.Controls.DragEventArgs)">
            <summary>
            Raises the <see cref="E:DragDrop"/> event.
            </summary>
            <param name="args">The <see cref="T:VIBlend.Silverlight.Controls.DragEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.DragDropManager.OnItemDragging(VIBlend.Silverlight.Controls.DragFeedbackEventArgs)">
            <summary>
            Raises the <see cref="E:ItemDragging"/> event.
            </summary>
            <param name="args">The <see cref="!:AnimatedScrollViewer.DragDropManager.DragFeedbackEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.DragDropManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VIBlend.Silverlight.Controls.DragDropManager"/> class.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.DragDropManager.Contains(System.Windows.FrameworkElement)">
            <summary>
            Determines whether the item is part of the drag drop manager.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.DragDropManager.AddDragDropElement(System.Windows.FrameworkElement)">
            <summary>
            Adds the drag drop element.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.DragDropManager.AddDragDropElement(System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            Adds the drag drop element.
            </summary>
            <param name="element">The element.</param>
            <param name="allowDrag">if set to <c>true</c> [allow drag].</param>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.DragDropManager.GetElementAtPoint(System.Windows.Input.MouseEventArgs)">
            <summary>
            Gets the element at point.
            </summary>
            <param name="args">The <see cref="T:System.Windows.Input.MouseEventArgs"/> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.DragDropManager.EndDrag">
            <summary>
            Ends the drag.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.DragDropManager.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.DragDropManager.RemoveDragDropElement(System.Windows.FrameworkElement)">
            <summary>
            Removes the drag drop element.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.DragDropManager.FeedbackBorder">
            <summary>
            Gets the feedback border.
            </summary>
            <value>The feedback border.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.DragDropManager.Data">
            <summary>
            Gets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.DragDropManager.ShowTargetFeedback">
            <summary>
            Gets or sets a value indicating whether to show the target feedback.
            </summary>
        </member>
        <member name="E:VIBlend.Silverlight.Controls.DragDropManager.DragOver">
            <summary>
            Occurs when the dragged item is over a drop target.
            </summary>
        </member>
        <member name="E:VIBlend.Silverlight.Controls.DragDropManager.DragDrop">
            <summary>
            Occurs when the drag item is dropped.
            </summary>
        </member>
        <member name="E:VIBlend.Silverlight.Controls.DragDropManager.ItemDragging">
            <summary>
            Occurs when the item is draggig,
            </summary>
        </member>
        <member name="E:VIBlend.Silverlight.Controls.DragDropManager.ItemDragStarting">
            <summary>
            Occurs when the drag operation is starting.
            </summary>
        </member>
        <member name="E:VIBlend.Silverlight.Controls.DragDropManager.DragCanceled">
            <summary>
            Occurs when the drag operation is canceled.
            </summary>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.DragDropManager.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.DragDropManager.IsDragging">
            <summary>
            Gets a value indicating whether this instance is dragging.
            </summary>
            <value>
            	<c>true</c> if this instance is dragging; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.DragDropManager.FeedbackPopup">
            <summary>
            Gets the feedback popup.
            </summary>
            <value>The feedback popup.</value>
        </member>
        <member name="T:VIBlend.Silverlight.Controls.ScreenPosition">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScreenPosition.Absolute">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScreenPosition.Bottom">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScreenPosition.Center">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScreenPosition.Right">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScreenPosition.Left">
            <exclude/>
        </member>
        <member name="F:VIBlend.Silverlight.Controls.ScreenPosition.Top">
            <exclude/>
        </member>
        <member name="T:VIBlend.Silverlight.Controls.DropDownType">
            <exclude/>
        </member>
        <member name="T:VIBlend.Silverlight.Utilities.PopupUtilities">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.PopupUtilities.#ctor(System.Windows.Controls.Control,System.Windows.Controls.Primitives.Popup)">
            <summary>
            Initializes a new instance of the <see cref="T:VIBlend.Silverlight.Utilities.PopupUtilities"/> class.
            </summary>
            <param name="parent">The parent.</param>
            <param name="popup">The popup.</param>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.PopupUtilities.AfterOnApplyTemplate">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.PopupUtilities.CalculateBounds">
            <summary>
            Calculates the bounds.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.PopupUtilities.BeforeOnApplyTemplate">
            <summary>
            Befores the on apply template.
            </summary>
        </member>
        <member name="E:VIBlend.Silverlight.Utilities.PopupUtilities.Closed">
            <exclude/>
        </member>
        <member name="E:VIBlend.Silverlight.Utilities.PopupUtilities.FocusChanged">
            <exclude/>
        </member>
        <member name="E:VIBlend.Silverlight.Utilities.PopupUtilities.UpdateVisualStates">
            <exclude/>
        </member>
        <member name="P:VIBlend.Silverlight.Utilities.PopupUtilities.IsOpen">
            <summary>
            Gets or sets a value indicating whether this instance is open.
            </summary>
            <value><c>true</c> if this instance is open; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Utilities.PopupUtilities.MaxDropDownHeight">
            <summary>
            Gets or sets the height of the max drop down.
            </summary>
            <value>The height of the max drop down.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Utilities.PopupUtilities.Popup">
            <summary>
            Gets or sets the popup.
            </summary>
            <value>The popup.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Utilities.PopupUtilities.UsesClosingVisualState">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.Extensions.Contains(System.String,System.String,System.StringComparison)">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.Extensions.Invert(System.Windows.Media.Matrix,System.Windows.Media.Matrix@)">
            <exclude/>
        </member>
        <member name="T:VIBlend.Silverlight.Utilities.AnimationType">
            <exclude/>
        </member>
        <member name="T:VIBlend.Silverlight.Controls.DragEventArgs">
            <summary>
            Represents the DragEventArgs class.
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Controls.DragEventArgs.#ctor(System.Object,System.Double,System.Double,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
            <summary>
            Initializes a new instance of the <see cref="T:VIBlend.Silverlight.Controls.DragEventArgs"/> class.
            </summary>
            <param name="data">The data.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.DragEventArgs.SourceElement">
            <summary>
            Gets the source element.
            </summary>
            <value>The source element.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.DragEventArgs.TargetElement">
            <summary>
            Gets the target element.
            </summary>
            <value>The target element.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.DragEventArgs.Data">
            <summary>
            Gets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.DragEventArgs.X">
            <summary>
            Gets the X.
            </summary>
            <value>The X.</value>
        </member>
        <member name="P:VIBlend.Silverlight.Controls.DragEventArgs.Y">
            <summary>
            Gets the Y.
            </summary>
            <value>The Y.</value>
        </member>
        <member name="T:VIBlend.Silverlight.Utilities.EditFilterMode">
            <summary>
            EditFilterMode enumeration.
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.EditFilterMode.None">
            <summary>
            Specifies none filter.
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.EditFilterMode.StartsWith">
            <summary>
            Specifies a starts-with filter mode.
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.EditFilterMode.StartsWithCaseSensitive">
            <summary>
            Specifies a starts-with case sensitive filter mode.
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.EditFilterMode.Contains">
            <summary>
            Specifies contains filter mode.
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.EditFilterMode.ContainsCaseSensitive">
            <summary>
            Specifies contains with case sensitive mode.
            </summary>
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.EditFilterMode.EndsWith">
            <summary>
            Specifies ends with mode.
            </summary>        
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.EditFilterMode.EndsWithCaseSensitive">
            <summary>
            Specifies ends with case sensitive mode.
            </summary>      
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.EditFilterMode.Equals">
            <summary>
            Specifies equals mode.
            </summary>   
        </member>
        <member name="F:VIBlend.Silverlight.Utilities.EditFilterMode.EqualsCaseSensitive">
            <summary>
            Specifies equals with case sensitive mode.
            </summary>
        </member>
        <member name="T:VIBlend.Silverlight.Utilities.EditFilterPredicate`1">
            <summary>
            Represents EditFilterPredicate 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="search"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.AutoCompleteSearch.EndsWith(System.String,System.String)">
            <summary>
            Ends with.
            </summary>
            <param name="searchText">The search text.</param>
            <param name="sourceText">The source text.</param>
            <returns></returns>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.AutoCompleteSearch.EndsWithCaseSensitive(System.String,System.String)">
            <summary>
            Ends with case sensitive.
            </summary>
            <param name="searchText">The search text.</param>
            <param name="sourceText">The source text.</param>
            <returns></returns>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.AutoCompleteSearch.EqualsCaseSensitive(System.String,System.String)">
            <summary>
            Ends with.
            </summary>
            <param name="searchText">The search text.</param>
            <param name="sourceText">The source text.</param>
            <returns></returns>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.AutoCompleteSearch.Equals(System.String,System.String)">
            <summary>
            Ends with.
            </summary>
            <param name="searchText">The search text.</param>
            <param name="sourceText">The source text.</param>
            <returns></returns>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.AutoCompleteSearch.Contains(System.String,System.String)">
            <summary>
            contains
            </summary>
            <param name="searchText">The search text.</param>
            <param name="sourceText">The source text.</param>
            <returns></returns>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.AutoCompleteSearch.ContainsCaseSensitive(System.String,System.String)">
            <summary>
            Contains with case sensitive
            </summary>
            <param name="searchText">The search text.</param>
            <param name="sourceText">The source text.</param>
            <returns></returns>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.AutoCompleteSearch.StartsWith(System.String,System.String)">
            <summary>
            Starts with.
            </summary>
            <param name="searchText">The search text.</param>
            <param name="sourceText">The source text.</param>
            <returns></returns>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.AutoCompleteSearch.StartsWithCaseSensitive(System.String,System.String)">
            <summary>
            Starts with case sensitive.
            </summary>
            <param name="searchText">The search text.</param>
            <param name="sourceText">The source text.</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:VIBlend.Silverlight.Utilities.Licensing" -->
        <member name="F:VIBlend.Silverlight.Utilities.Licensing.licenseContent">
            <summary>
            Gets or sets the license info content
            </summary>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.Licensing.ValidateLicense(System.Type)">
            <summary>
            Validates the license.
            </summary>
            <param name="controlType">Type of the control.</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:VIBlend.Silverlight.Utilities.Licensing.LICheck(System.Windows.FrameworkElement)" -->
        <member name="P:VIBlend.Silverlight.Utilities.Licensing.LicenseContent">
            <summary>
            Gets or sets the content of the license.
            </summary>
            <value>The content of the license.</value>
        </member>
        <member name="T:VIBlend.Silverlight.Utilities.DataContextChangeEventHelper">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.DataContextChangeEventHelper.#ctor(System.Windows.FrameworkElement)">
            <exclude/>
        </member>
        <member name="M:VIBlend.Silverlight.Utilities.DataContextChangeEventHelper.Bind">
            <exclude/>
        </member>
        <member name="P:VIBlend.Silverlight.Utilities.DataContextChangeEventHelper.FrameworkElement">
            <exclude/>
        </member>
        <member name="P:VIBlend.Silverlight.Utilities.DataContextChangeEventHelper.DataContext">
            <exclude/>
        </member>
        <member name="E:VIBlend.Silverlight.Utilities.DataContextChangeEventHelper.DataContextChanged">
            <exclude/>
        </member>
    </members>
</doc>
